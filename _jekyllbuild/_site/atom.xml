<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Debug Things</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2014-11-28T23:34:34-08:00</updated>
 <id></id>
 <author>
   <name>James Davis</name>
   <email>james.l.davis@outlook.com</email>
 </author>

 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 5 - AppDomain and Host Safety</title>
   <link href="//2014/11/30/extending-mysql-server-part5/"/>
   <updated>2014-11-30T00:00:00-08:00</updated>
   <id>/2014/11/30/extending-mysql-server-part5</id>
   <content type="html">&lt;p&gt;Now that we have a properly refactored base, and we have a good working solution to load new file from, we need to start considering safety. Not just type safety and integrity of data. No, safety of the executing code as well as the safety of the CLR host—MySQL in this case. Without that we would open up our new plugin library to a lot of malicious things.&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-the-code&quot;&gt;How to get the code&lt;/h2&gt;

&lt;p&gt;Enter the following commands in your GIT command prompt. It’s that simple. All code changes as I have shown them in this blog post should be there. If you come across this post at a way later date, try increasing the range from 5 to 10, and so on.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jldgit/mysql_udf_dotnet.git -b wip-nextversion
git log --abbrev-commit -n 5 --pretty=oneline

6d017b0 Changes relating to post 5
303d9cd Changes relating to post 4
5d721fa Good working copy.
6a588f8 Work in progress.
f1696c3 Merge branch 'master' of https://github.com/jldgit/mysql_udf.git

git checkout 6d017b0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;whats-changed&quot;&gt;What’s Changed?&lt;/h2&gt;
&lt;p&gt;Not a lot has changed in this version. We are now in at a good cruising speed to add in new components as needed. The major changes here are adding in some new configuration sections relating to permission groups (permission sets) that we can arbitrarily create. I’ve also added in &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.security.permissions.hostprotectionattribute(v=vs.110).aspx&quot;&gt;Host Access Protection&lt;/a&gt; which will block some features that are useful but dangerous when working in a shared server environment. You can get around them, but you have to go FullTrust.&lt;/p&gt;

&lt;h3 id=&quot;updated-appdomain-manager-mysqlhostmanager&quot;&gt;Updated AppDomain Manager (MySQLHostManager)&lt;/h3&gt;
&lt;p&gt;Added in a new configuration section that allows us to define very specific security for the assemblies that are to be loaded in our MySQL process. The example below shows how these items relate. As mentioned in &lt;a href=&quot;/2014/11/26/extending-mysql-server-part4/&quot;&gt;part 4&lt;/a&gt; of this series the default execution mode is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.security.permissions.securitypermissionflag%28v=vs.110%29.aspx&quot;&gt;SecurityPermissionFlag.Execution&lt;/a&gt;. This allows very simplistic computation to be done, but a lot of powerful features in .NET are stripped away. Now, we can grant FullTrust or a very specific set of permissions. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-XML&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;configSections&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mysqlassemblies&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLHostManager.MySQLAssemblyList, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;s&quot;&gt;             MySQLHostManager, Version=1.0.0.0, PublicKeyToken=71c4a5d4270bd29c&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configSections&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysqlassemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissionsets&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissionset&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLPartial&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;          &lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;FileIOPermission&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissionset&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissionsets&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;assemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!--No specific permission set assigned to this assembly; uses default (MySQLPartial)--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass.CustomMySQLClass&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fullname =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;&lt;span class=&quot;s&quot;&gt;                Version=1.0.0.0, PublicKeyToken=a55d172c54d273f4&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clrversion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!--FullTrust Granted to this assembly--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass.FullTrustAssemblyDemo&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fullname =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;&lt;span class=&quot;s&quot;&gt;                Version=1.0.0.0, PublicKeyToken=a55d172c54d273f4&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clrversion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;                &lt;span class=&quot;na&quot;&gt;permissions=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;FullTrust&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!--MySQLPartial Granted to this assembly--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass.PartialTrustAssemblyDemo&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fullname =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;&lt;span class=&quot;s&quot;&gt;                Version=1.0.0.0, PublicKeyToken=a55d172c54d273f4&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clrversion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;                &lt;span class=&quot;na&quot;&gt;permissions=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLPartial&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/assemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysqlassemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;The clrversion attribute has not been implemented yet. I will get to that in the next blog post.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;updated-clrlib&quot;&gt;Updated clr_lib&lt;/h3&gt;
&lt;p&gt;I added in the Host Access Protection features that will keep the CLR safe in the event of some possible bad things that can be done by code. Here is a list of the items I am stopping for partially trusted code. The key phrase here is that it only stops &lt;strong&gt;PARTIALLY&lt;/strong&gt; trusted code. If you mark an assembly as FullTrust, it’s game on. This also means you can set up a CAS Policy (for .NET 3.5 and below) and bypass the need to have this setting. But in .NET 4.0 CAS Policy is no longer in use. &lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Attribute&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;eSynchronization&lt;/td&gt;
      &lt;td&gt;Specifies that common language runtime classes and members that allow user code to hold locks be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eSelfAffectingThreading&lt;/td&gt;
      &lt;td&gt;Specifies that managed classes and members whose capabilities can affect threads in the hosted process be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eSelfAffectingProcessMgmt&lt;/td&gt;
      &lt;td&gt;Specifies that managed classes and members whose capabilities can affect the hosted process be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eExternalProcessMgmt&lt;/td&gt;
      &lt;td&gt;Specifies that managed classes and members that allow the creation, manipulation, and destruction of external processes be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eExternalThreading&lt;/td&gt;
      &lt;td&gt;Specifies that managed classes and members that allow the creation, manipulation, and destruction of external threads be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eUI&lt;/td&gt;
      &lt;td&gt;Specifies that managed classes and members that allow or require human interaction be blocked from running in partially trusted code.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;expanded-walkthrough&quot;&gt;Expanded Walkthrough&lt;/h2&gt;
&lt;p&gt;This wasn’t a major code change and we really only scratched the surface of what this change really did. I chose to be a bit more restrictive for HAPso I can whittle away the over restrictive. I also chose to be very flexible for what CAS permissions would be allowed. Let’s take a little closer look at the permissions code and the HAP code.&lt;/p&gt;

&lt;h3 id=&quot;security-permissions&quot;&gt;Security Permissions&lt;/h3&gt;
&lt;p&gt;The cornerstone of .NET security is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/c5tk9z76(v=vs.110).aspx&quot;&gt;Code Access Security&lt;/a&gt;. This is a set of attributes and assertions that check the rights of the caller(s). In the simplest form it checks to see if any of the callers have access to call the possibly insecure code. For example, if we try to write a file, and we do not have the &lt;code&gt;FileIOPermission&lt;/code&gt; we will get a security exception. In the code below you can see how we iterate through a plain text list of permissions (case sensitive for now). If we have that permission listed it will add it to the default policy.&lt;/p&gt;

&lt;p&gt;If we happen to have the phrase FullTrust in the assembly permissions attribute, we give the app domain an Unrestricted permission state. This is the same as adding each permission. This means that &lt;strong&gt;ALL&lt;/strong&gt; assemblies loaded in this domain will have full trust. We will circle back in later blog posts to fix a possible security flaw in this design.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAssemblyPermissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MySQLAsembly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecurityPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecurityPermissionFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Equals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fulltrust&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringComparison&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvariantCultureIgnoreCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// override the default permission set with a full trust permission set.&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;      &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mysqlassemblies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQLAssemblyList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permlists&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permissionsetscollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permlist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permlists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;  
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;      &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MySQLPermission&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permission&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permissionscollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;          &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;            &lt;span class=&quot;c1&quot;&gt;// Removed code for brevity ...&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;OdbcPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Odbc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OdbcPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;OleDbPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OleDb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OleDbPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;SqlClientPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlClientPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;EnvironmentPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnvironmentPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;FileDialogPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileDialogPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-40&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-41&quot;&gt;            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;FileIOPermission&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-42&quot;&gt;              &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileIOPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrestricted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-43&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-44&quot;&gt;            &lt;span class=&quot;c1&quot;&gt;// Removed code for brevity ...&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-45&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-46&quot;&gt;            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-47&quot;&gt;                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-48&quot;&gt;          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-49&quot;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-50&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-51&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-52&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-53&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-54&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;host-access-protection&quot;&gt;Host Access Protection&lt;/h3&gt;
&lt;p&gt;In order to make sure we don’t inadvertantly shut MySQL down, or even block a thread indefinitely we implement Host Protection. This is not exactly the same as Code Access Security. Meaning, it has nothing to do with the call stack. The &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.security.permissions.hostprotectionattribute(v=vs.110).aspx&quot;&gt;HostProtectionAttibute&lt;/a&gt; immediately stops execution if it is found while JITting the code. So, this means you could have code that is not “host aware” running that would clear the CAS checks, but could still cause stability issues.&lt;/p&gt;

&lt;p&gt;An example of this is calling &lt;code&gt;System.Diagnostics.Debug.WriteLine(&quot;Yaaassss!&quot;);&lt;/code&gt; inside of your code. There is nothing particularly bad here as it’s not writing to the UI so it would seem this code is safe. However, if you look inside of the code you will find the following things to be true. The &lt;code&gt;WriteLine()&lt;/code&gt; method internally calls on the trace listeners collection and that acquires a lock.&lt;/p&gt;

&lt;p&gt;The lock compiles down into &lt;code&gt;Monitor.Enter()&lt;/code&gt; and &lt;code&gt;Monitor.Exit()&lt;/code&gt;. If we look at this code we can see the HostProtection attribute is establishing that it has both Synchronization (eSynchronization) and ExternalThreading (eExternalThreading). This trips the HAP when the code is being JITted.&lt;/p&gt;

&lt;p&gt;The way around this is to grant the AppDomain unrestricted security which turns off the verification. So essentially, you can bypass host access protection by setting an assembly (or the domain) to FullTrust.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TraceInternal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseGlobalLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;     &lt;span class=&quot;c1&quot;&gt;// Internal trace lister code that does not acquire a lock.&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;     &lt;span class=&quot;c1&quot;&gt;// Removed for brevity.&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;k&quot;&gt;lock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TraceInternal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;critSec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;      &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TraceListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;traceListener&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TraceInternal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Listeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;        &lt;span class=&quot;n&quot;&gt;traceListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TraceInternal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AutoFlush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;        &lt;span class=&quot;n&quot;&gt;traceListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;na&quot;&gt;[ComVisible(true)]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;na&quot;&gt;[HostProtection(SecurityAction.LinkDemand, Synchronization=true, ExternalThreading=true)]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Monitor&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;   &lt;span class=&quot;c1&quot;&gt;// Removed code for brevity &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the code snippet that turns on the Host Protection manager with our specified flags.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// get the host protection manager&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;n&quot;&gt;ICLRHostProtectionManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHostProtectionManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrGetProtectionManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_pClrControl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCLRManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IID_ICLRHostProtectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;k&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHostProtectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrGetProtectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrGetProtectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// setup host proctection to disallow any threading from partially trusted code.&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Why? well, if a thread is allowed to hang indefinitely the command could get stuck.&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrHostProtection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pHostProtectionManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetProtectedCategories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EApiCategories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eSynchronization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eSelfAffectingThreading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eSelfAffectingProcessMgmt&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eExternalProcessMgmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eExternalThreading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;Now that we have a solid foundation from part 4 we can extend it to be a bit more restrictive (&lt;em&gt;yes, that’s what we want&lt;/em&gt;) so we can protect our server. As we move into the next few posts we will start to add on some more security and some more useful features. Shadow Copy comes to mind.&lt;/p&gt;

&lt;p&gt;As always, I’m here to help if you have questions. Look for a v1.0 before the end of December. I will make sure the application has an installer and can be used with both 32bit and 64bit.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 4 - Extending the AppDomain Manager</title>
   <link href="//2014/11/26/extending-mysql-server-part4/"/>
   <updated>2014-11-26T00:00:00-08:00</updated>
   <id>/2014/11/26/extending-mysql-server-part4</id>
   <content type="html">&lt;p&gt;So far the application was simple and was able to load and run a command from inside of our AppDomain manager. As promised, I am extending this functionality to allow loading of any number of classes. In order to do this I made some large changes to the application. In order to keep things somewhat coherent between Parts 1, 2 and 3—I branched off into a work in progress(wip) area that should make it easier to follow along.&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-the-code&quot;&gt;How to get the code&lt;/h2&gt;

&lt;p&gt;Enter the following commands in your GIT command prompt. It’s that simple. All code changes as I have shown them in this blog post should be there. If you come across this post at a way later date, try increasing the range from 5 to 10, and so on.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jldgit/mysql_udf_dotnet.git -b wip-nextversion
git log --abbrev-commit -n 5 --pretty=oneline

303d9cd Changes relating to post 4
5d721fa Good working copy.
6a588f8 Work in progress.
f1696c3 Merge branch 'master' of https://github.com/jldgit/mysql_udf.git
ac92302 Included support for .NET 4.0. Refactored a few items.

git checkout 303d9cd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;whats-changed&quot;&gt;What’s Changed?&lt;/h2&gt;
&lt;p&gt;Pretty much everything. I re-factored a lot of the code to match up with the way I want the application to read near the end. More than likely this will happen again, but the name changes should be subtle.&lt;/p&gt;

&lt;h3 id=&quot;updated-appdomain-manager-mysqlhostmanager-imanagedhost&quot;&gt;Updated AppDomain Manager (MySQLHostManager, IManagedHost)&lt;/h3&gt;
&lt;p&gt;This is the first real significant change. I have extended the interface to allow me to get back some specific data from our application. I have also added a new interface calls &lt;code&gt;ICustomAssembly&lt;/code&gt; this is what all extension classes will inherit from.&lt;/p&gt;

&lt;p&gt;We now have some rudimentary form of security. The AppDomains that are created from the DefaultDomain are now limited to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.security.permissions.securitypermissionflag%28v=vs.110%29.aspx&quot;&gt;SecurityPermissionFlag.Execution&lt;/a&gt;; meaning that we will allow code to execute, but no other permissions are given. This is quite limiting as there are a lot of use assemblies that are rendered useless. We will take care of this in the next blog post.&lt;/p&gt;

&lt;p&gt;Along with the standardized interface and the tightened security, I have introduced a custom configuration section that allows us to define assemblies that can be loaded in our AppDomains. This section will grow a bit over time, right now it takes in a short name and provides a full name. The name can be partial as it’s used in the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ky3942xh(v=vs.110).aspx&quot;&gt;Assembly.Load()&lt;/a&gt; method.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-XML&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;   &lt;span class=&quot;nt&quot;&gt;&amp;lt;configSections&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mysqlassemblies&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLHostManager.MySQLAssemblyList, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;s&quot;&gt;             MySQLHostManager, Version=1.0.0.0, PublicKeyToken=71c4a5d4270bd29c&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configSections&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysqlassemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;assemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fullname =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLCustomClass, &lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;&lt;span class=&quot;s&quot;&gt;                Version=1.0.0.0, PublicKeyToken=a55d172c54d273f4&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;clrversion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/assemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysqlassemblies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;updated-iunmanagedhost&quot;&gt;Updated IUnmanagedHost&lt;/h3&gt;
&lt;p&gt;A small but powerful change was added to the IUnmanagedHost interface. I added the &lt;code&gt;Unload()&lt;/code&gt; method. This—as the name would suggest—unloads the domain. This, used in conjunction with &lt;code&gt;CreateDomain&lt;/code&gt; provide the proper isolation per method execution. Right now this is in it’s simplest form and immediately unloads the domain. We will expand this later to heuristically drop domains as they are no longer needed.&lt;/p&gt;

&lt;h3 id=&quot;updated-mysqludfbridge-mysqludf&quot;&gt;Updated MySQLUDFBridge (mysql_udf)&lt;/h3&gt;
&lt;p&gt;Starting from the humble UDF example provided we were able to start the CLR and execute a simple command. But, if we were to do this a bunch we might run into issues (stability comes to mind). So, the code was expanded to add checks for existing instances of the CLR and to create an AppDomain for the command execution.&lt;/p&gt;

&lt;p&gt;We now have included all of the exports for int, real and string methods so we can execute any of these from this one library. For now, we’ll focus on the int methods and work out from there.&lt;/p&gt;

&lt;h2 id=&quot;expanded-walkthrough&quot;&gt;Expanded Walkthrough&lt;/h2&gt;
&lt;p&gt;So, now that we have more things we can play with, what does it mean? In the most basic sense we start to gain control over the bad things that could affect the stability of our server environment. Let’s take a look at how this stability will take shape.&lt;/p&gt;

&lt;h3 id=&quot;security&quot;&gt;Security&lt;/h3&gt;
&lt;p&gt;.NET security is a very, very complex subject and can’t be described in its entirety in a blog post or 10. Our security, for now, is very basic. It limits the permissions of any code we deploy to the MySQL server. In the code snippit below you will see the simple security set we give the new AppDomain. Notice we’re only granting the &lt;code&gt;Execution&lt;/code&gt; permission for the new AppDomain. This will carry in to assemblies loaded inside of the AppDomain that aren’t granted FullTrust.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecurityPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecurityPermissionFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first line grants zero permissions to the new AppDomain. The second like adds the Execution security flag to the domain. This means that when any securely written code Demands or Asserts specific access—&lt;code&gt;FileIOPermission&lt;/code&gt; for example—it will not be allowed and could possibly throw an exception. This can limit even the most trivial of commands, but is a powerful ally. If we think about what could be done with &lt;code&gt;FileIOPermission&lt;/code&gt; the damage could be far reaching if for some reason the MySQL server runs with elevated access.&lt;/p&gt;

&lt;h3 id=&quot;appdomain-creation&quot;&gt;AppDomain Creation&lt;/h3&gt;
&lt;p&gt;Up until now, we just used the DefaultDomain. This meant that if any code that executed in this domain threw an unhandled exception it would bubble up into our unmanaged code. This isn’t completely detremental unless we understand that an exception thrown on a thread has the potential to take down an application if it’s fatal or uncaught.&lt;/p&gt;

&lt;p&gt;Now, we isolate the domain when we call the &lt;code&gt;xxx_init&lt;/code&gt; functions. The domain is created on the fly and is given a unique number based off of FileTime. Once the domain is created we pass back the &lt;code&gt;IManagedHost&lt;/code&gt; instance to the CLR host to keep track of it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InitializeCLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrCoInit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CoInitializeEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COINIT_APARTMENTTHREADED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindToRuntime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterfacePtr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;        &lt;span class=&quot;n&quot;&gt;_com_raise_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// start it up&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;      &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STRING_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;        &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateAppDomainForQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;_bstr_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;        &lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_com_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;      &lt;span class=&quot;s&quot;&gt;L&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wcerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;Error 0x&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;) : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;    &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;//initid-&amp;gt;ptr = reinterpret_cast&amp;lt;char *&amp;gt;(&amp;amp;pClrHost);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;STDMETHODIMP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_CreateAppDomainForQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRetVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IManagedHostPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pAppMgr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDefaultManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IManagedHostPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pNewDomain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pAppMgr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateAppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRetVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pNewDomain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAppDomainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_NewlyCreatedAppDomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRetVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pNewDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the previous excerpts from the C++ code, we can see that &lt;code&gt;Initialize()&lt;/code&gt; checks for the existence of a GLOBAL variable &lt;code&gt;pClrHost&lt;/code&gt;. If that variable is not null, it goes through the initialization steps listed in &lt;a href=&quot;/2014/11/18/extending-mysql-server-part3/&quot;&gt;part 3&lt;/a&gt;. After the CLR is initialized we blindly create a new AppDomain. This executes the &lt;code&gt;CreateAppDomain()&lt;/code&gt; method below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IManagedHost&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CreateAppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mysqlassemblies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQLAssemblyList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemblyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assemblies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assemblyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PermissionSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PermissionState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecurityPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecurityPermissionFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Execution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;n&quot;&gt;AppDomainSetup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomainSetup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainInitializer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ADIDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainInitializerArguments&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemblyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurationFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;mysqldotnet.config&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{0}..\\&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PrivateBinPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;RelWithDebInfo;lib\\plugin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomainName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToFileTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appdomain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;        &lt;span class=&quot;n&quot;&gt;AppDomainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;        &lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Evidence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;        &lt;span class=&quot;n&quot;&gt;ads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;        &lt;span class=&quot;n&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;        &lt;span class=&quot;n&quot;&gt;CreateStrongName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetExecutingAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;    &lt;span class=&quot;n&quot;&gt;activeAppDomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appdomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appdomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DomainManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the previous example we use the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.appdomainsetup%28v=vs.110%29.aspx&quot;&gt;AppDomainSetup&lt;/a&gt; class to define a few specific changes to the AppDomain we are creating. First, we change the config file name so we don’t keep looking inside of &lt;code&gt;mysqld.exe.config&lt;/code&gt; this allows us to isolate AppSettings per assembly and AppDomain. Second, we change the &lt;code&gt;ApplicationBase&lt;/code&gt; to go up one level so we can define the &lt;code&gt;PrivateBinPath&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These two settings change the locations in which the AppDomain will look for assemblies &lt;strong&gt;NOT&lt;/strong&gt; in the GAC. If you need a refresher in .NET assembly loading, I suggest looking &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/yx7xezcf%28v=vs.110%29.aspx&quot;&gt;here&lt;/a&gt;. If your assembly is loaded in the GAC, it will use that one instead as we have not changed any of the binding policies.&lt;/p&gt;

&lt;h3 id=&quot;custom-assemblies&quot;&gt;Custom Assemblies&lt;/h3&gt;
&lt;p&gt;Before we just executed a simple &lt;code&gt;Run()&lt;/code&gt; method inside of the DefaultDomain. Now, we can execute a custom assembly that implements &lt;code&gt;MySQLHostManager.ICustomAssembly&lt;/code&gt; from &lt;code&gt;MySQLHostManager.dll&lt;/code&gt;. This custom interface allows your new code to properly execute.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;MySQLHostManager&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICustomAssembly&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;    &lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;    &lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunIntegers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunReal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunReals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This interface exposes both the single execution and the aggregate execution models. You do not have to implement ALL of these functions, you just have to be mindful of how you call the custom function from MySQL. These custom assemblies are loaded into a domain and instantiated when you first call the method.&lt;/p&gt;

&lt;p&gt;An assembly is first loaded when the AppDomain is initialized. If you look back at the previous section you will see &lt;code&gt;ads.AppDomainInitializer = ADIDelegate;&lt;/code&gt;. This tells the new AppDomain to run this static delegate upon successful load. You can also see that it gets it’s input from the &lt;code&gt;ads.AppDomainInitializerArguments = new string[] { assemblyName, className };&lt;/code&gt; line. Notice, that if your custom assembly contains more than one type (class) inside of it, the loader will take care of it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ADIDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;  &lt;span class=&quot;n&quot;&gt;InitFunctions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RunInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InitFunctions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICustomAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAssemblies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MySQLHostManager.ICustomAssembly&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICustomAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;          &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICustomAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;new-calling-convention-for-udf&quot;&gt;New Calling Convention for UDF&lt;/h3&gt;
&lt;p&gt;Before we just passed in a simple integer. Now we are specifying the function to be run. So in order to do that we must pass in the class name. Let’s take a look at the new UDF code that makes sure we have this. If you look at lines 17 and 20, you will notice we’re calling the method with &lt;code&gt;args-&amp;gt;args[0]&lt;/code&gt;. This is the FIRST parameter you pass into the MySQL UDF—which is the name of the type &lt;code&gt;MySQLCustomClass.CustomMySQLClass&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;MySQLCustomClass.CustomMySQLClass&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;    &lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;n&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;n&quot;&gt;IManagedHostPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mhp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSpecificManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;INT_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;cm&quot;&gt;/* Add numbers */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RunInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mhp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;REAL_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* Add numers as longlong */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RunInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mhp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;    &lt;span class=&quot;c1&quot;&gt;// run the application&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_com_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;      &lt;span class=&quot;s&quot;&gt;L&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wcerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;Error 0x&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;) : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;    &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;As you can (hopefully) see, we are getting close to a more first class plugin for MySQL and .NET. As of now, it goes without saying that this is under HEAVY BETA and shouldn’t be used in production. I did some performance tests against it, but haven’t stress tested or load tested the database.&lt;/p&gt;

&lt;p&gt;If you do want to use it in production let me know and I can help guide you with some updates to the code. Mainly these updates will be around bounds checking and type safety.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 3 - Adding in the .NET Hosting API</title>
   <link href="//2014/11/18/extending-mysql-server-part3/"/>
   <updated>2014-11-18T00:00:00-08:00</updated>
   <id>/2014/11/18/extending-mysql-server-part3</id>
   <content type="html">&lt;p&gt;Now that we’ve walked through the basics of a UDF, let’s start bolting on an AppDomain Manager. As I mentioned before in &lt;a href=&quot;(/2014/11/16/extending-mysql-server-part2/)&quot;&gt;part 2&lt;/a&gt; my example is based off of the &lt;a href=&quot;http://www.microsoft.com/en-us/download/details.aspx?id=7325&quot;&gt;ADMHost&lt;/a&gt; sample provided by Microsoft. The code is used as a jump off point, but we will be extending it as these posts progress. This part of the series will focus on the insertion points rather than the actual code. That will be in the next part. For some extra information on the hosting API check out &lt;a href=&quot;http://www.amazon.com/gp/product/0735619883/&quot;&gt;Customizing the Microsoft® .NET Framework&lt;/a&gt; by &lt;a href=&quot;http://blogs.msdn.com/b/stevenpr/&quot;&gt;Steven Pratschner&lt;/a&gt;. Also check out &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms404385(v=vs.110).aspx&quot;&gt;MSDN&lt;/a&gt; for update information on the APIs.&lt;/p&gt;

&lt;h2 id=&quot;foreword&quot;&gt;Foreword&lt;/h2&gt;
&lt;p&gt;In order to host the CLR we must first start it. And to start it we must bind to it. In the newer versions of the CLR you can bind to both v2.0 and v4.0 at the same time. This means you need to be able to support both versions of the code.&lt;/p&gt;

&lt;p&gt;This presents some challenges as it requires you to write and maintain two AppDomain Managers, as well as understand the security polices of both versions. I will touch on these as we move forward. But, for now, we’re going to accept (most of) the defaults and not worry about the nuances.&lt;/p&gt;

&lt;h2 id=&quot;execution-flow&quot;&gt;Execution Flow&lt;/h2&gt;
&lt;p&gt;The execution flow is pretty straight forward, but if you don’t have a background in Application Domains or the hosting process it can seem a bit convoluted. Here is a quick rundown of methods and execution for both the first run and subsequent runs.&lt;/p&gt;

&lt;h3 id=&quot;first-run-on-server-start&quot;&gt;First Run on Server Start&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;MySQLd starts&lt;/li&gt;
  &lt;li&gt;mysqldotnet Plug-In is loaded&lt;/li&gt;
  &lt;li&gt;First call to &lt;code&gt;mysqldotnet_xxx()&lt;/code&gt; executes &lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt; loads the hosting API via &lt;code&gt;CClrHost::BindToRuntime()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;CClrHost::BindToRuntime()&lt;/code&gt; spins up both CLRs side-by-side
    &lt;ul&gt;
      &lt;li&gt;This is configurable &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;CClrHost::BindToRuntime()&lt;/code&gt; saves a pointer to &lt;code&gt;ICLRRuntimeInfo&lt;/code&gt; per CLR &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt; starts the CLR via &lt;code&gt;IUnmanagedHost::Start()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;IUnmanagedHost::Start()&lt;/code&gt; internally calls &lt;code&gt;IUnmanagedHost::raw_Start()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;IUnmanagedHost::raw_Start()&lt;/code&gt; configures each CLR, it repeats the following steps
    &lt;ol&gt;
      &lt;li&gt;The CLR is given a pointer to the &lt;code&gt;CClrHost&lt;/code&gt; instance to implement &lt;code&gt;IHostManager&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;The CLR is given a proper AppDomain Manager using &lt;code&gt;ICLRControl::SetAppDomainManagerType()&lt;/code&gt; &lt;/li&gt;
      &lt;li&gt;Internally &lt;code&gt;ICLRControl::SetAppDomainManagerType()&lt;/code&gt; calls the overridden method &lt;code&gt;AppDomainManager::InitializeNewDomain()&lt;/code&gt; which sets the &lt;code&gt;RegisterWithHost&lt;/code&gt; flag&lt;/li&gt;
      &lt;li&gt;This registration calls &lt;code&gt;IHostManager::SetAppDomainManager()&lt;/code&gt; which is implemented by &lt;code&gt;CClrHost::SetAppDomainManager()&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;CClrHost::SetAppDomainManager()&lt;/code&gt; stores a copy of the &lt;strong&gt;DEFAULT&lt;/strong&gt; domain that was created in our std::map&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Control is then returned to &lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt; which determines the outcome&lt;/li&gt;
  &lt;li&gt;MySQL executes &lt;code&gt;mysqldotnet_xxx()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mysqldotnet_xxx()&lt;/code&gt; calls the “Run()” command on the AppDomain Manager for the query&lt;/li&gt;
  &lt;li&gt;The custom assembly executes its internal “Run()” command to return the result&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;additional-runs&quot;&gt;Additional Runs&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;A call to &lt;code&gt;mysqldotnet_xxx()&lt;/code&gt; executes &lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mysqldotnet_xxx_init&lt;/code&gt; checks to see if we have a pointer to our &lt;code&gt;IHostManager&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;If one is not loaded it will load it like the First Run&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL executes mysqldotnet_xxx&lt;/li&gt;
  &lt;li&gt;mysqldotnet_xxx calls the “Run()” command on the AppDomain Manager for the assembly&lt;/li&gt;
  &lt;li&gt;The custom assembly executes its internal “Run()” command to return the result&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;initialization&quot;&gt;Initialization&lt;/h2&gt;
&lt;p&gt;MySQL executes &lt;code&gt;mysqldotnet_xxx_init()&lt;/code&gt; which in turn calls &lt;code&gt;CClrHost::BindToRuntime()&lt;/code&gt;. This method creates a COM instance of our &lt;code&gt;CClrHost&lt;/code&gt; class. This is an ATL helper that allows you to instantiate abstract classes, it is akin to a singleton, but slightly different as it is based on CoCreateInstance.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;CComObject&amp;lt;Base&amp;gt;::CreateInstance()&lt;/code&gt; method has some internal checks and methods it calls. One of the methods we override is &lt;code&gt;CComObjectRootEx::FinalConstruct()&lt;/code&gt;. This method is called once we’ve completed a some bounds checking. This is where we actually start the CLR. See &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/9e31say1.aspx&quot;&gt;MSDN&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;In order to initialize the proper CLR we first must loop through all of the installed CLRs on the system. We call the &lt;code&gt;CLRCreateInstance()&lt;/code&gt; method to query for the &lt;code&gt;IID_ICLRMetaHost&lt;/code&gt;. Once we have a pointer to the MetaHost we can Enumerate all of the installed versions of the CLR. &lt;code&gt;ICLRMetaHost::GetInterface()&lt;/code&gt; returns a pointer to the runtime host. We can then store the pointer to the CLR Runtime Host in our &lt;code&gt;std::map&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; There are numerous versions of the CLR for the same base version. For example the build can differ between two machines. So, if you were to add in any logic to look for a specific CLR you should limit to Major.Minor.Revision and not Major.Minor.Revision.Build.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Global parameter (I know, shame on me)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;n&quot;&gt;IUnmanagedHostPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrCoInit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CoInitializeEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COINIT_APARTMENTTHREADED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;        &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindToRuntime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterfacePtr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;        &lt;span class=&quot;n&quot;&gt;_com_raise_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrBind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// start it up&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;      &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_com_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;      &lt;span class=&quot;s&quot;&gt;L&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wcerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;Error 0x&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;) : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;    &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindToRuntime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__deref_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IUnmanagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;n&quot;&gt;_ASSERTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;n&quot;&gt;CComObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrCreate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CComObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUnmanagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FinalConstruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;n&quot;&gt;ICLRMetaHost&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pMetaHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLRCreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_CLRMetaHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IID_ICLRMetaHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LPVOID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pMetaHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IEnumUnknown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pRtEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;n&quot;&gt;ICLRRuntimeInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;  &lt;span class=&quot;n&quot;&gt;ULONG&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetched&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;  &lt;span class=&quot;n&quot;&gt;ICLRRuntimeHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtimesLoaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;  &lt;span class=&quot;n&quot;&gt;WCHAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;  &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;  &lt;span class=&quot;n&quot;&gt;pMetaHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumerateInstalledRuntimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRtEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pRtEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUnknown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;    &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetched&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;    &lt;span class=&quot;n&quot;&gt;ZeroMemory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;    &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetVersionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_CLRRuntimeHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;      &lt;span class=&quot;n&quot;&gt;IID_ICLRRuntimeHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;      &lt;span class=&quot;k&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LPVOID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;      &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hr failed....&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;    &lt;span class=&quot;n&quot;&gt;m_CLRRuntimeMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_lastCLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;  &lt;span class=&quot;n&quot;&gt;pRtEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;  &lt;span class=&quot;n&quot;&gt;pRtEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;  &lt;span class=&quot;n&quot;&gt;pMetaHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;start&quot;&gt;Start&lt;/h2&gt;
&lt;p&gt;Once we’ve found and loaded all of the CLRs we want, we need to start them. But before we do, we need to set our options. If you were to call &lt;code&gt;IUnmanagedHost::Start()&lt;/code&gt; without setting any of the additional interfaces you will get a standard CLR to execute your .NET code in.&lt;/p&gt;

&lt;p&gt;That is good. But we need to customize our CLR a bit so we can spin up new application domains when a query is started and unload them when it is finished. &lt;strong&gt;This functionality is not implemented in these examples but will be in later posts.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the example below you can see that we are looping through the &lt;code&gt;m_CLRRuntimeMap&lt;/code&gt; that was populated in the Initialization step above. This allows us to set our main &lt;code&gt;CClrHost&lt;/code&gt; object as the implementation of IHostControl. We also set our AppDomainManager type with the two strings provided.&lt;/p&gt;

&lt;p&gt;Once we’re done we call &lt;code&gt;ICLRRuntimeHost::Start()&lt;/code&gt;. This kicks off a new application domain and calls the &lt;code&gt;AppDomainManager::InitializeNewDomain()&lt;/code&gt; method. This sets the flag &lt;code&gt;RegisterWithHost&lt;/code&gt;.
This flag tells the AppDomain to call into the &lt;code&gt;IHostManager::SetAppDomainManager()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Inside of the &lt;code&gt;IHostManager::SetAppDomainManager()&lt;/code&gt; we are given the AppDomain integer Id as well as a pointer to the AppDomain Manager. We check to see if it implements our &lt;code&gt;IManagedHost&lt;/code&gt; interface. If it does we call a method we created called &lt;code&gt;IManagedHost::GetCLR()&lt;/code&gt; this returns a text representation of the current version. This is used to add to the AppDomainManager std::map; this std::map holds the DEFAULT AppDomains.&lt;/p&gt;

&lt;p&gt;After this method returns we have officially started our CLR.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; As before, this code will run for BOTH v2.0 and v4.0. It would also run for any OTHER CLRs that are allowed to be loaded side by side.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainManagerAssembly&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;mysql_managed_interface, Version=1.0.0.0, PublicKeyToken=71c4a5d4270bd29c&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainManagerType&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;mysql_managed_interface.MySQLHostManager&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;n&quot;&gt;STDMETHODIMP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// we should have bound to the runtime, but not yet started it upon entry&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;n&quot;&gt;_ASSERTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_CLRRuntimeMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;      &lt;span class=&quot;n&quot;&gt;ICLRRuntimeHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// get the CLR control object&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrClrControl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCLRControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_pClrControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrClrControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrClrControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// set ourselves up as the host control&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrHostControl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;      &lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetHostControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IHostControl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// setup the AppDomainManager&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrSetAdm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;      &lt;span class=&quot;n&quot;&gt;m_pClrControl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetAppDomainManagerType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;        &lt;span class=&quot;n&quot;&gt;AppDomainManagerAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;        &lt;span class=&quot;n&quot;&gt;AppDomainManagerType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrSetAdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrSetAdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;// finally, start the runtime&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;      &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_pClr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;    &lt;span class=&quot;c1&quot;&gt;// mark as started&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-40&quot;&gt;    &lt;span class=&quot;n&quot;&gt;m_started&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-41&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-42&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-43&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InitializeNewDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppDomainSetup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appDomainInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// let the unmanaged host know about us&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;n&quot;&gt;InitializationFlags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppDomainManagerInitializationOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterWithHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;STDMETHODIMP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetAppDomainManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dwAppDomainId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;  &lt;span class=&quot;n&quot;&gt;__in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IUnknown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pUnkAppDomainManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// get the managed host interface&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IManagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pAppDomainManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pUnkAppDomainManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;    &lt;span class=&quot;n&quot;&gt;__uuidof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;k&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pAppDomainManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;n&quot;&gt;_ASSERTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;AppDomainManager does not implement IManagedHost&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E_NOINTERFACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// register ourselves as the unmanaged host&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;  &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrSetUnmanagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;    &lt;span class=&quot;n&quot;&gt;pAppDomainManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_SetUnmanagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUnmanagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hrSetUnmanagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hrSetUnmanagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;  &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pAppDomainManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetCLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// save a copy&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;  &lt;span class=&quot;n&quot;&gt;m_appDomainManagers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pAppDomainManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-our-method&quot;&gt;Running Our Method&lt;/h2&gt;

&lt;p&gt;Now that we have our default AppDomain spun up it is time to execute code. After MySQL finishes with the &lt;code&gt;_init()&lt;/code&gt; method, it calls the core function. In this case &lt;code&gt;mysqldotnet_int()&lt;/code&gt;. This is where we will actually execute our custom method and return the data to MySQL.&lt;/p&gt;

&lt;p&gt;For now, we’re not actually going to spin up a new AppDomain to load an assembly. What we are going to do is use our default application domain manager to execute our simple &lt;code&gt;Run()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;RunApplication()&lt;/code&gt; method gets the default managed host and calls the &lt;code&gt;Run()&lt;/code&gt; method with the parameter. Remember that in our &lt;code&gt;CComObjectRootEx::FinalConstruct()&lt;/code&gt; method we set the member &lt;code&gt;m_lastCLR&lt;/code&gt; to what ever the last thing to fall out of the enumeration was. &lt;em&gt;In my case it was the v4.0 CLR.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We use this default host when we go to execute our &lt;code&gt;Run()&lt;/code&gt; method we implemented. Our AppDomain manager exposes &lt;code&gt;Run()&lt;/code&gt; via a COM visible interface. The implementation is simple right now, but we will expand it to run a custom assembly in later posts.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I should go ahead and say I’m breaking one of those cardinal rules of when to use globals. Since our UDFs have the ability for us to pass items between methods I should use that construct. However, we need to make sure we keep our references to our std::maps or they will be deleted when the object goes out of scope. I trust that this is an okay use, but requires some extra protection around it dealing with multi threaded calls. That being said I can be a bit lazy sometimes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// MySQL UDF core implementation&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;n&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;STRING_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Add string lengths */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;INT_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Add numbers */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RunApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;          &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;REAL_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Add numers as longlong */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RunApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClrHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;          &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;      &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;    &lt;span class=&quot;c1&quot;&gt;// run the application&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_com_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;      &lt;span class=&quot;s&quot;&gt;L&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;wchar_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wcerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;Error 0x&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&amp;quot;) : &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-40&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-41&quot;&gt;    &lt;span class=&quot;n&quot;&gt;returnCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-42&quot;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-43&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-44&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Global method called by our UDF&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IUnmanagedHostPtr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pClr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// Get the default managed host&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;n&quot;&gt;IManagedHostPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pManagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pClr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pManagedHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// IUnmanagedHost::DefaultManagedHost property calls this internally&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;n&quot;&gt;STDMETHODIMP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CClrHost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_DefaultManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IManagedHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// just get the AppDomainManager for the default AppDomain&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_GetManagedHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BSTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_lastCLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Csharp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Our actual .NET code (cute isn&amp;#39;t it?)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;subsequent-runs&quot;&gt;Subsequent Runs&lt;/h2&gt;
&lt;p&gt;The same steps are taken when we actually run the core function. However, the only real difference is when the &lt;code&gt;*_init()&lt;/code&gt; method is called we check the pointer to see if it is null. Check the first code example for this code path.&lt;/p&gt;

&lt;p&gt;During testing I found if I assigned a pointer to the ptr field in UDF_INIT, a delete was called by MySQL somewhere in the execution chain. The CLR wasn’t unloaded but it cleared out my maps and other state members.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;This quick walk through was to show where the code is injected into the MySQL plugin. At this point in the posting we are still adding on features as we go. From here on out I plan to have specific commits that will expose the code examples at the proper points in time.&lt;/p&gt;

&lt;p&gt;The next section will go into how we can isolate code execution by spinning up unique application domains per query. This will be one of the core features that makes this solution robust as we can prevent any external code from destroying the integrity of the MySQL environment.&lt;/p&gt;

&lt;p&gt;If you have any questions, feel free to leave a comment or contact me on Twitter.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 2 - UDF Deep Dive</title>
   <link href="//2014/11/16/extending-mysql-server-part2/"/>
   <updated>2014-11-16T00:00:00-08:00</updated>
   <id>/2014/11/16/extending-mysql-server-part2</id>
   <content type="html">&lt;p&gt;After I worked through compiling the sources, the next step was to get .NET hosting working at a basic level. I used source from another project called &lt;a href=&quot;http://www.microsoft.com/en-us/download/details.aspx?id=7325&quot;&gt;ADMHost&lt;/a&gt; (App Domain Manager) to base my code on. This code allows you to specify and create a managed AppDomain manager and use it to manage and run your .NET assemblies.&lt;/p&gt;

&lt;p&gt;This is a critical piece of this software since we should consider some of the niceties that using the CLR will gain us. In this list consider the fact that each query would run in a separate AppDomain.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Isolation&lt;/li&gt;
  &lt;li&gt;Validation&lt;/li&gt;
  &lt;li&gt;Structured Exception Handling&lt;/li&gt;
  &lt;li&gt;Type Safety&lt;/li&gt;
  &lt;li&gt;Robust Libraries&lt;/li&gt;
  &lt;li&gt;Managed Memory&lt;/li&gt;
  &lt;li&gt;Simpler Coding&lt;sup&gt;*&lt;/sup&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The critical factor here is &lt;strong&gt;isolation&lt;/strong&gt;. If we were to roll this out to a server and it was used by a couple of queries here and there we probably would never have to worry about any of our functions stepping on each other. But if we were to try and execute hundreds of queries simultaneously we start to run into some limitations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;*NOTE&lt;/strong&gt; While I listed simpler coding as an example, this doesn’t mean that we can’t create a robust solution. Or, that we’re bound to an inferior language. What I mean by this is you can develop a custom function and be assured that you’ve got enough safe guards in place to keep the server alive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But, before we get deep into the guts of the .NET Hosting API we need to first understand the execution of the UDF itself. It will be the gateway into MySQL and will need to be understood to know where to inject our code.&lt;/p&gt;

&lt;h2 id=&quot;udf-anatomy&quot;&gt;UDF Anatomy&lt;/h2&gt;

&lt;p&gt;The UDF program flow is pretty simple to get. There are only three methods we need to implement to make it work for the simplest of values, the humble integer. For my application I will implement a function called &lt;code&gt;mysqldotnet&lt;/code&gt; and it will work with integer types. Be aware you can also work with REAL and STRING types you just need to implement the proper method signature. There are examples in the source code found at &lt;code&gt;sql/udf_examples.c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For a complete reference check out &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/udf-calling.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-Cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysqldotnet_int_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int_deinit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I am using &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; in this example becaue I am writing my UDF in C++.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-init-function&quot;&gt;The init function&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This name self explanatory. It will be used to initialize the run of this method. This is run &lt;strong&gt;once&lt;/strong&gt; per query. So, if you have a need to setup memory, check values, load libraries, etc. you could do that here. It is important to note that your code needs to be thread safe. If you decide to use global variables (which you shouldn’t) you need to protect them.&lt;/p&gt;

&lt;h4 id=&quot;initd&quot;&gt;initd&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;UDF_INIT initd&lt;/code&gt; parameter represents state that is passed to all of the corresponding functions. In the structure definition below we can see what the intentions are. Depending on what type of function you implement will drive the use of the structure members.&lt;/p&gt;

&lt;p&gt;This structure has one interesting member that we will visit in future posts, &lt;code&gt;void *extension&lt;/code&gt;. This item has the potential to store anything we desire, an address pointer, a new structure, an external library function. The list is obviously endless.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_udf_init&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maybe_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* 1 if function can return NULL */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* for real functions */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* For string functions */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                   &lt;span class=&quot;cm&quot;&gt;/* free pointer for function data */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;	&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;const_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* 1 if function always returns the same value */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;args&quot;&gt;args&lt;/h4&gt;
&lt;p&gt;The next important parameter is &lt;code&gt;UDF_ARGS *args&lt;/code&gt;. These are the actual arguments that are passed to your function. In the initialize function you are allowed to strongly type the parameters to the function. For example &lt;code&gt;SELECT mysqldotnet_int(3,&quot;MultiplyFunction&quot;);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This query calls the int function of my custom code. I pass in a raw value of 3 and a string value of “MultuplyFunction”. The number of arguments is not defined and is arbitrary in length. In the init function you can check the type of the arguments to ensure valid operation before continuing.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_udf_args&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;cm&quot;&gt;/* Number of arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;	&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* Pointer to item_results */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                      &lt;span class=&quot;cm&quot;&gt;/* Pointer to argument */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;cm&quot;&gt;/* Length of string arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maybe_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* Set to 1 for all maybe_null args */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;cm&quot;&gt;/* Pointer to attribute name */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute_lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* Length of attribute arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;message&quot;&gt;message&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;char* message&lt;/code&gt; parameter contains a pointer to where you can write out your error or status message on init. We will show more about this pointer in the up comming series. For now, be aware that it exists and you can use it to send a message back to the MySQL console. Please note the max size is &lt;code&gt;MYSQL_ERRMSG_SIZE&lt;/code&gt;; which is defined as &lt;code&gt;#define MYSQL_ERRMSG_SIZE	512&lt;/code&gt; in &lt;code&gt;mysql_com.h&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-core-function&quot;&gt;The “core” function&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the heart of your UDF. In the simplest of terms this code sits in the middle of a loop and will be executed for each record. A lot can take place during the execution of your code and you need to be careful about how you (ab)use the data handed to you.&lt;/p&gt;

&lt;h4 id=&quot;initd-1&quot;&gt;initd&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;UDF_INIT initd&lt;/code&gt; parameter is the state information that is saved between function calls. If you set something in your init function you can retrieve it from here. You can also alter state of this parameter here, but I would caution only to do so when it’s absolutely necessary. For sake of speed and safety you should only work with local variables.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_udf_init&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maybe_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* 1 if function can return NULL */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* for real functions */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* For string functions */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                   &lt;span class=&quot;cm&quot;&gt;/* free pointer for function data */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;	&lt;span class=&quot;n&quot;&gt;my_bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;const_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* 1 if function always returns the same value */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;args-1&quot;&gt;args&lt;/h4&gt;
&lt;p&gt;For each execution of your UDF you will get a fresh copy of UDF_ARGS. They shouldn’t vary too much since (hopefully) your parameters should be the same. However, if there is any logic built in to the SQL statement you could, of course, run into times where you’re passed an integer and then a decimal. That example would be a sign of poor query writing, but you need to be aware of it for casting issues.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_udf_args&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;cm&quot;&gt;/* Number of arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;	&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* Pointer to item_results */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                      &lt;span class=&quot;cm&quot;&gt;/* Pointer to argument */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;cm&quot;&gt;/* Length of string arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maybe_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* Set to 1 for all maybe_null args */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;cm&quot;&gt;/* Pointer to attribute name */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute_lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* Length of attribute arguments */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In order to loop through your args properly you need to account for what the arguments are. An example would be a function that is expecting to do work on a collection of integers. Now, consider the following SQL query &lt;code&gt;SELECT mysqldotnet_int(3, 6, 78, 4.0, 10, &quot;AddAllTogether&quot;);&lt;/code&gt;. The intention of the function is to add all of them together, but there are varying types.&lt;/p&gt;

&lt;p&gt;Your function, again by use of branching instructions such as &lt;code&gt;CASE&lt;/code&gt; and &lt;code&gt;IF&lt;/code&gt;, can introduce significant variation in the parameters you accept. You could use the code example below. This was extracted from the &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/udf-arguments.html&quot;&gt;UDF documentation&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myfunc_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;		&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;		&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;		&lt;span class=&quot;n&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;				&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;			&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;STRING_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;			&lt;span class=&quot;cm&quot;&gt;/* Add string lengths */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;				&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lengths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;INT_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;			&lt;span class=&quot;cm&quot;&gt;/* Add numbers */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;				&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;			&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;REAL_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;			&lt;span class=&quot;cm&quot;&gt;/* Add numers as longlong */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;				&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;			&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;				&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;isnull&quot;&gt;is_null&lt;/h4&gt;
&lt;p&gt;This is a one char (one byte) feild that you can set to let MySQL know that the result is NULL. This will override the value you return and set it to NULL.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myfunc_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;		&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;		&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;error&quot;&gt;error&lt;/h4&gt;
&lt;p&gt;This is a one char (one byte) feild that you can set to let MySQL know that there is an error. This will override the value you return and set it NULL.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myfunc_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;		&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;		&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Once you set this, all subsequent calls to this method will return NULL. This field is to indicate that your function cannot continue.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-deinit-function&quot;&gt;The deinit function&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mysqldotnet_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UDF_INIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UDF_ARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function is run when the SQL statement ends. This can be used to clean up any allocations or other items that you may have created when running this UDF.&lt;/p&gt;

&lt;h4 id=&quot;initd-2&quot;&gt;initd&lt;/h4&gt;
&lt;p&gt;If the &lt;code&gt;UDF_INIT initd&lt;/code&gt; parameter was set during the init function or altered during the execution of the SQL statement, then you can inspect the state of this to perform the proper actions.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This overview of the UDF structure will provide the foundation on to which we will start to build the .NET Hosting environment. In the next series I will explain the simple .NET Hosting API based on ADMHost.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 1 - Compile Sample UDF</title>
   <link href="//2014/11/11/extending-mysql-server-part1/"/>
   <updated>2014-11-11T00:00:00-08:00</updated>
   <id>/2014/11/11/extending-mysql-server-part1</id>
   <content type="html">&lt;p&gt;So, the first thing I had to do was compile the MySQL sample UDF which is included in the source tree. While it seems like a simple thing to do with CMake and all of the proper tools installed, there are a few things not documented. The steps to compile &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/udf-compiling.html&quot;&gt;can be found here&lt;/a&gt;. The steps are really straight forward, but there is a catch. In order to build on Windows there are a few steps you will need to do in order to fully get the example working.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot;&gt;The source files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cmake.org/&quot;&gt;CMake&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gnuwin32.sourceforge.net/packages/bison.htm&quot;&gt;Bison&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd831853.aspx&quot;&gt;Visual Studio 2013&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;issues&quot;&gt;Issues&lt;/h2&gt;
&lt;p&gt;With the source tree downloaded I was able to get started. I unfortunately went the route of installing Bazaar and downloading the source. The easier—and better—way is to go &lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot;&gt;here and download&lt;/a&gt; the developer source; make sure you select &lt;code&gt;Source Code&lt;/code&gt; from the drop down box.&lt;/p&gt;

&lt;p&gt;After the source is downloaded, follow the &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/udf-compiling.html&quot;&gt;UDF compile&lt;/a&gt; instructions. Now, try it. Did it work? Probably not. You can try and update the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to include extra directories, because it seems like it would help.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;cmake_minimum_required(VERSION 3.1)
PROJECT(udf_example)

# Path for MySQL include directory
INCLUDE_DIRECTORIES(&quot;C:/Users/James/Source/BazaarRepos/mysql-server/mysql-5.5/include&quot;)
INCLUDE_DIRECTORIES(&quot;C:/Users/James/Source/BazaarRepos/mysql-server/mysql-5.5/sql&quot;)
INCLUDE_DIRECTORIES(&quot;C:/Users/James/Source/BazaarRepos/mysql-server/mysql-5.5/regex&quot;)

ADD_DEFINITIONS(&quot;-DHAVE_DLOPEN&quot;)
ADD_LIBRARY(udf_example MODULE udf_example.c udf_example.def)
TARGET_LINK_LIBRARIES(udf_example wsock32)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Try again. Nope?&lt;/p&gt;

&lt;p&gt;You may have seen an error like this: &lt;code&gt;include\my_global.h(77): fatal error C1083: Cannot open include file: 'my_config.h': No such file or directory&lt;/code&gt;. This is pretty straight forward and says you don’t have that file. But how do we get it?&lt;/p&gt;

&lt;p&gt;What I found I had to do was do a &lt;a href=&quot;http://dev.mysql.com/doc/internals/en/cmake-howto-detailed.html&quot;&gt;full compile&lt;/a&gt; of the MySQL source to generate all of the proper libraries and to generate a few configuration header files. In hind sight if I had found that article before starting with the UDF I would have gotten a lot further.&lt;/p&gt;

&lt;p&gt;However, there is still a gotcha here. When compiling &lt;code&gt;mysqld.exe&lt;/code&gt; you may get an error that looks like this &lt;code&gt;error LNK2001: unresolved external symbol _xmm@0000001100000010000000050000000f&lt;/code&gt;. Apparently when you compile with debug symbols a few compiler intrinsics make it through the &lt;code&gt;create_def_file.js&lt;/code&gt; CScript file. In order to fix this you can alter the &lt;code&gt;IsCompilerDefinedSymbol()&lt;/code&gt; method in the CScript file to look like below. This removes any instance of XMM that is generated in the DEF file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// returns true if the symbol is compiler defined&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IsCompilerDefinedSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;__real@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;_RTC_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; 
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;??_C@_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;??_R&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;??_7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;?_G&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// scalar deleting destructor&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;_VInfreq_?&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// special label (exception handler?) for Intel compiler&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;?_E&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// vector deleting destructor&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;_xmm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// Compiler XMM intrinsic&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;__xmm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// Compiler XMM intrinsic&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this change I was able to run the following command &lt;code&gt;devenv MySQL.sln /build RelWithDebInfo &amp;gt; output_build.txt&lt;/code&gt; to generate all of the files I needed.&lt;/p&gt;

&lt;p&gt;Once I had the binaries compiled and all of the headers I needed I attempted to create a standalone project again. This time I only received one error.
&lt;code&gt;1&amp;gt;udf_example.obj : error LNK2019: unresolved external symbol _stpcpy referenced in function _avgcost_init&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;In order to fix this I made a quick change to a line of code in the &lt;code&gt;udf_example.c&lt;/code&gt; file. The proper way would have been to include the strings library that was generated from the full compile but I didn’t want to fuss with it completely.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// udf_example.c - Lines removed for brevity&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* BEFORE */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define strmov(a,b) stpcpy(a,b)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define bzero(a,b) memset(a,0,b)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* AFTER CODE CHANGE */&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define strmov(a,b) strcpy(a,b)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define bzero(a,b) memset(a,0,b)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now the application will compile! At least it did for me. If you want to check you can either install it using the instructions from the compile link above or just execute the &lt;code&gt;&amp;lt;root&amp;gt;\sql\RelWithDebInfo\mysqld.exe&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;I compiled and renamed the UDF example to myudf.dll. I was able to load this hello world function into MySQL using the &lt;code&gt;CREATE FUNCTION&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;mysql&amp;gt; CREATE FUNCTION myfunc_double RETURNS REAL SONAME &quot;myudf.dll&quot;;
Query OK, 0 rows affected (0.01 sec)

mysql&amp;gt; SELECT myfunc_double(1.2);
+--------------------+
| myfunc_double(1.2) |
+--------------------+
|              48.33 |
+--------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT myfunc_double(22);
+-------------------+
| myfunc_double(22) |
+-------------------+
|             50.00 |
+-------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT myfunc_double(10000);
+----------------------+
| myfunc_double(10000) |
+----------------------+
|                48.20 |
+----------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT myfunc_double(10000);
+----------------------+
| myfunc_double(10000) |
+----------------------+
|                48.20 |
+----------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT myfunc_double(10000);
+----------------------+
| myfunc_double(10000) |
+----------------------+
|                48.20 |
+----------------------+
1 row in set (0.00 sec)

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>MySQL .NET Hosting Extension - Part 0</title>
   <link href="//2014/11/11/extending-mysql-server-part0/"/>
   <updated>2014-11-11T00:00:00-08:00</updated>
   <id>/2014/11/11/extending-mysql-server-part0</id>
   <content type="html">&lt;p&gt;For some reason I feel compelled to write an extension for &lt;a href=&quot;http://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt; that allows use of .NET classes for functions. It’s really a purely academic exercise—even though I’m not in school—that I’m using to explore the use of the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd380850(v=vs.110).aspx&quot;&gt;.NET Hosting APIs&lt;/a&gt;. I will use my blog as a way to keep myself focused and accountable. But more over it’s so I don’t forget what I wanted to do. I will line out a few milestones.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I started messing around with the Hosting API when I was researching a debugging issue surrounding Host Access Protection. I have a &lt;a href=&quot;(/2014/10/21/hostprotectionexception-ssrs/)&quot;&gt;blog post&lt;/a&gt; that talks about it. This got me curious as to some areas it would be applicable. I wanted to make the extension useful and not just a way for me to load a .NET assembly into a “hello world!” application. Although, that’s where this all started.&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-hosting-api&quot;&gt;What is the Hosting API?&lt;/h3&gt;
&lt;p&gt;Quite simply, it is a way for you (the developer) to integrate &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/8bs2ecf4(v=vs.110).aspx&quot;&gt;Microsoft’s CLR&lt;/a&gt; implementation into your application. You can extend your application by allowing managed code execution in safe containers that can interact with the state of your application by predefined interfaces. Check out this &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd380850(v=vs.110).aspx&quot;&gt;article&lt;/a&gt; for more info. I also highly recommend reading &lt;a href=&quot;https://www.microsoft.com/learning/en-us/book.aspx?ID=6895&amp;amp;locale=en-us&quot;&gt;Customizing the .NET Framework&lt;/a&gt; by &lt;a href=&quot;http://www.linkedin.com/pub/steven-pratschner/0/a92/8a4&quot;&gt;Steven Pratschner&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;why-mysql&quot;&gt;Why MySQL?&lt;/h3&gt;
&lt;p&gt;Well, I have a soft spot in my heart for this particular database. It was the first real RDBMS that I developed with. I started back in 1999 using the good ‘ole LAMP stack. Also, MySQL is used on Windows occasionally and I thought it would be fun trying to extend something I’ve used for so long.&lt;/p&gt;

&lt;h3 id=&quot;will-this-be-production-ready&quot;&gt;Will this be production ready?&lt;/h3&gt;
&lt;p&gt;No, probably never. I think the idea is great, but its too niche to be of any use to a lot of people. I’d like to see it mentioned as examples of what (not) to do when extending MySQL or using the Hosting API.&lt;/p&gt;

&lt;h2 id=&quot;milestones&quot;&gt;Milestones&lt;/h2&gt;
&lt;p&gt;Like I said before in my opening, I wanted to use the blog as a way to hold myself accountable. The milestones are going to be lofty, changing and probably never fully realized. That being said, here is a short list of what I want to do in the coming weeks and months.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a simple hello world application using the hosting API&lt;/li&gt;
  &lt;li&gt;Create a simple &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.1/en/adding-udf.html&quot;&gt;User Defined Function&lt;/a&gt; (UDF) for MySQL&lt;/li&gt;
  &lt;li&gt;Send and retrieve data from the UDF&lt;/li&gt;
  &lt;li&gt;Extend the simple UDF to load the CLR&lt;/li&gt;
  &lt;li&gt;Implement a custom interface to interact with the UDF&lt;/li&gt;
  &lt;li&gt;Load an assembly from the file system&lt;/li&gt;
  &lt;li&gt;Allow dynamic loading of UDF based on parameters&lt;/li&gt;
  &lt;li&gt;Implement Host Access Protection to protect MySQL&lt;/li&gt;
  &lt;li&gt;Extend MySQL to include a BLOB table to install assemblies&lt;/li&gt;
  &lt;li&gt;Load assemblies from BLOB table&lt;/li&gt;
  &lt;li&gt;Write the same for &lt;a href=&quot;http://www.mono-project.com/&quot;&gt;Mono&lt;/a&gt;?&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>First Time Speaking at OWASP Tampa</title>
   <link href="//2014/11/06/owasp-top-10-mvc-tampa-day-talk/"/>
   <updated>2014-11-06T00:00:00-08:00</updated>
   <id>/2014/11/06/owasp-top-10-mvc-tampa-day-talk</id>
   <content type="html">&lt;p&gt;A few weeks ago I submitted a talk for &lt;a href=&quot;https://www.owasp.org/index.php/Tampa&quot;&gt;OWASP Tampa Days 2014&lt;/a&gt; and I was selected.  The topic I picked to demonstrate was how MVC for .NET can solve some of the problems listed in the &lt;a href=&quot;https://www.owasp.org/index.php/Top_10_2013-Top_10&quot;&gt;OWASP Top 10&lt;/a&gt;. Let me be the first to say that I was truly unprepared for what I was about to get into. This was truly an exercise in conciseness. &lt;a href=&quot;/owasp/&quot;&gt;Get the slides here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When choosing my topic I was guided by my friend Rich who suggested I take my knowledge of programming and apply it to security. I am very comfortable programming in .NET and MVC. However, I never applied a formal discipline or regime to my development. I always thought about this and that, but never really put it into words.&lt;/p&gt;

&lt;p&gt;After a couple of days reading over the Top 10 and banging out some quick code examples I was ready to start on the presentation. The easy part was making a slide for each of the top 10. The hard part was keeping it brief. I am not brief. At all.&lt;/p&gt;

&lt;p&gt;So, I whisked my way through a couple hundred lines of code and about 50 hours of work on the presentation. All in all it went quickly over the following weeks. I felt the beginning of November draw close and I also felt confident that I was ready to go. I rehearsed the presentation a few times, making mental notes, jotting down some sidebar ideas, and genuinely feeling like I had it under control. I started removing some context slides and anecdotal information because it started to get a bit windy.&lt;/p&gt;

&lt;p&gt;The night before the meeting I looked back over the presentation and did one final rehearsal on the back porch in 50 degree weather. It felt right. I had my timings down; the demonstrations made sense. I was even able to finish up with about 5 minutes to spare for questions.&lt;/p&gt;

&lt;p&gt;Now, here’s the reality of what happened. I make my way over to Tampa and start to enjoy the first talks of the day. I notice there is no Wifi, but that’s all right because I have my hotspot. I start adjusting my screens and font sizes to be shown on the projector. Lunch comes and goes and I’m up at 1 o’clock. I get a little uneasy because I have to use a microphone; not because I don’t like my voice, but because I use my hands all the goddamn time.&lt;/p&gt;

&lt;p&gt;I plug in and all seems well, that is, until I had to start talking. I feel that my voice is pitchy and genuinely start to feel nervous. I start remembering all those confidence talks my dad gave me about people are just people. I notice I’m getting a little bit of cotton mouth, but luckily I had some water up there.&lt;/p&gt;

&lt;p&gt;Part of my day-to-day is to give classes at work a few times a year, but this time was different. I didn’t have that comfort of being being known and vetted by my work credentials. Everyone was a stranger, save for a couple of folks.&lt;/p&gt;

&lt;p&gt;Another fear that came crashing down, was the fact that I only had 45 minutes. I didn’t have the luxury of a 8-hour or even a 4-hour class time. Forty-Five. Minutes. I wasted about 10 minutes introducing myself and describing was MVC was. Thirty-Five. Minutes. And I still had about 14 slides to go. I still can’t use my hands to their full potential.&lt;/p&gt;

&lt;p&gt;But, sometime around the 20 minute mark I felt a little bit at ease. I had already thumped the microphone, fumbled a couple of lines in my presentation, and forgot where I put “that one code example.” Squeaked. Had an audible dry mouth moment. All in all, it was a terrifying experience.&lt;/p&gt;

&lt;p&gt;Terrifying, challenging, and great. While I have some things to work on (timing, confidence, conciseness, direction, etc.) I know this won’t be the last thing that I decide to deliver a talk on. I already have some other topics I want to present to other groups—B-Sides, for example.&lt;/p&gt;

&lt;p&gt;So, if you’re one of the unlucky few who had to sit through me trying to cram what was more likely a code example class rather than a quick talk I’m truly sorry. However, this doesn’t mean you’re completely off the hook. I am taking this petrifying experience and learning from it.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Contributing to a Forum for 10 Days Straight</title>
   <link href="//2014/10/31/answering-questions/"/>
   <updated>2014-10-31T00:00:00-07:00</updated>
   <id>/2014/10/31/answering-questions</id>
   <content type="html">&lt;p&gt;Back in early October my company sent me to &lt;a href=&quot;http://http://compuwareperform.com/&quot;&gt;Perform 2014&lt;/a&gt;. While there, I met with some great people and found out that I’m not alone. It was also very humbling. I liked that. But, with all of the meeting I found that there were a lot of people who didn’t know where to turn to for help. Turns out there is a very active user community. I wanted to get involved.&lt;/p&gt;

&lt;p&gt;I have always been in and out of the forums and spent most of my time seeking answers as well. Most of the answers were hard to find, or if we called support weren’t very easy to implement. And, sometimes, we were actually told to search there to see if someone else had seen or done what we were asking. I noticed that a lot of the questions being asked I knew the answer to. It was time to give back.&lt;/p&gt;

&lt;p&gt;So, I decided to turn on notifications for the &lt;a href=&quot;http://www.dynatrace.com/en/index.html&quot;&gt;dynatrace&lt;/a&gt; forum and started watching. Within the first two days I saw a topic I wanted to jump on. It was exciting and unnerving because I felt uneasy typing my response. I was anxious because I rarely share knowledge with people that I haven’t established myself with. I thought, honestly, I was going to fail.&lt;/p&gt;

&lt;p&gt;While I can’t say that all of my answers were correct, I did feel that I was helping. I felt a rejuvenation of the tool that I have been using the past 4 years. If anything I was moving the needle a bit for some people who may be stuck. Even if the person said, “Man, WTF is that guy talking about?” and was able to move on I &lt;/p&gt;

&lt;p&gt;There were puzzles to be solved that I have never tried, but I knew could be done. I don’t have any specific examples but I can say that just trying to find the most succinct solution is very satisfying. It is also, understandably, a lot of work. This work translates into knowledge, so the return is tremendous&lt;/p&gt;

&lt;p&gt;So. What have I learned?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are some people out there doing some very complex things with a very complex tool.&lt;/li&gt;
  &lt;li&gt;Contrary to my personal delusions, I don’t know the answer to everything. &lt;/li&gt;
  &lt;li&gt;People need help.&lt;/li&gt;
  &lt;li&gt;A lot of people don’t know what they need. But one idea takes them miles.&lt;/li&gt;
  &lt;li&gt;Only a few people respond back.&lt;/li&gt;
  &lt;li&gt;Time between questions and answers can be a year (or more).&lt;/li&gt;
  &lt;li&gt;Beware of the technical black hole. Not everyone knows the internals.&lt;/li&gt;
  &lt;li&gt;Beware of those who know a lot. Like myself they often have too many answers.&lt;/li&gt;
  &lt;li&gt;Patience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will I continue? Of course. I do like it, I get asked questions all the time at work about the tool and I can always point them in the right direction. But, helping other people out with their issues broadens my view and gives me more to offer internally.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Debugging - HostProtectionException in SSRS</title>
   <link href="//2014/10/21/hostprotectionexception-ssrs/"/>
   <updated>2014-10-21T00:00:00-07:00</updated>
   <id>/2014/10/21/hostprotectionexception-ssrs</id>
   <content type="html">&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Our BI team is currently going through an uplift from Win2k3 to Win2012. It is quite a massive undertaking of course. But, beyond the amount of work that has to be done there is another dangerous killer out there.  Undocumented changes. In this article I describe the System.Security.HostProtectionException in relation to SSRS and custom code.&lt;/p&gt;

&lt;p&gt;In this case I was working with an in-house developed bit of custom code that has been alive for &lt;strong&gt;YEARS&lt;/strong&gt;. This code is used inside of a SSRS report to render a special type of image that comes from the database.&lt;/p&gt;

&lt;p&gt;Sometime between SSRS install, v1, and vNow of this custom DLL there were numerous changes before during, and after deployment. Most of these changes are just code deployment for SSRS. But, some are a bit more insidious. There are OS level changes, patches, security updates and the like.&lt;/p&gt;

&lt;p&gt;So, it’s probably fair to say that the code we once had is not the code we have now. Knowing that simple—but useful—fact,  we can get right down to business.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;
&lt;p&gt;The first thing I always do when trying to debug a “we’ve been working on it for weeks,” scenario is try to figure out who has been doing what. In this case we had a very skilled senior engineer working on the issue. So, I was able to forgo a ton of leg work and get down to the meat of the problem. The engineer had already compared config files, checked parameters, run numerous tests, and even added some compensating configuration changes but to no avail.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run report. Fail.&lt;/li&gt;
  &lt;li&gt;Check Application Log. Clean.&lt;/li&gt;
  &lt;li&gt;Check System log. Clean.&lt;/li&gt;
  &lt;li&gt;Check SSRS log. Clean.&lt;/li&gt;
  &lt;li&gt;Run report while watching in WinDbg. Exception.
    &lt;ul&gt;
      &lt;li&gt;Run the report a couple of times to correlate exceptions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;debugging&quot;&gt;Debugging&lt;/h2&gt;
&lt;p&gt;I started by attaching to the &lt;code&gt;ReportingServices.exe&lt;/code&gt; with WinDbg and continued execution. I had hoped that any messages to be displayed would show up in the console. I was in luck. As the application ran I could see CLR exceptions. &lt;/p&gt;

&lt;p&gt;Once I was able to see there was an exception I needed to see what the exception was. So I loaded up PSSCOR2 and dumped all of the exceptions using &lt;code&gt;!dae&lt;/code&gt;. With this I was able to see that there were 2 exceptions. This correlated to the number of times that I ran this particular report. An output example is below.  Note the first line of the output.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:000&amp;gt; !dae
Going to dump the .NET Exceptions found in the heap.
Loading the heap objects into our cache.

&amp;lt;&amp;lt;&amp;lt;removed topmost common exceptions&amp;gt;&amp;gt;&amp;gt;

Number of exceptions of this type:        2
Exception MethodTable: 6b8bf514
Exception object: 02a0f438
Exception type: System.Security.HostProtectionException
Message: Attempted to perform an operation that was forbidden by the CLR host.
InnerException: &amp;lt;none&amp;gt;
StackTrace (generated):
&amp;lt;none&amp;gt;
StackTraceString: &amp;lt;none&amp;gt;
HResult: 80131640
-----------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After seeing that I was able to use &lt;code&gt;!StopOnException (!soe)&lt;/code&gt; to pause the execution once we reached this particular exception. To ensure I was ready once the CLR was loaded. I did this by setting an exception(event) breakpoint by using &lt;code&gt;sxe ld mscorwks; g&lt;/code&gt;. After that I loaded PSSCOR2 with &lt;code&gt;.load exts/psccor2&lt;/code&gt;. Look at the following WinDbg log recreation below.&lt;/p&gt;

&lt;p&gt;With the command &lt;code&gt;!soe -create System.Security.HostProtectionException 1&lt;/code&gt; I created a break point on the first chance exception of this host protection exception. The &lt;code&gt;-create&lt;/code&gt; option tells &lt;code&gt;!soe&lt;/code&gt; to stop on first chance. The number &lt;code&gt;1&lt;/code&gt; is a pseudo register that you can use to check for a pass-fail condition. This is useful if you need to use ADPlus and check exactly WHAT exception was thrown “automagically.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; There are help files in WinDbg that briefly explain ADPlus. However, you can also use procdump.exe to create dump files on specific exceptions. ADPlus gives very, very, very granular control over taking a crash dump; there is a learning curve. Procdump.exe gives great power with one command line but does not allow for complex evaluations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:000&amp;gt; sxe ld mscorwks; g
ModLoad: 6bb20000 6c0ce000   C:\Windows\Microsoft.NET\Framework\v2.0.50727\mscorwks.dll
eax=00000000 ebx=00000000 ecx=00000000 edx=00000000 esi=7efdd000 edi=003eeb3c
eip=77a5fc62 esp=003eea10 ebp=003eea64 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
ntdll!NtMapViewOfSection+0x12:
77a5fc62 83c404          add     esp,4
0:000&amp;gt; .load exts/psscor2
0:000&amp;gt; !soe -create System.Security.HostProtectionException 1
Breakpoint set
0:000&amp;gt; g

'System.Security.HostProtectionException hit'
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=003eddc0 ebx=e0434f4d ecx=00000001 edx=00000000 esi=003ede48 edi=0067c598
eip=75d9c42d esp=003eddc0 ebp=003ede10 iopl=0         nv up ei pl nz ac pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000216
KERNELBASE!RaiseException+0x58:
75d9c42d c9              leave

0:000&amp;gt; !CLRStack
OS Thread Id: 0x3520 (0)
ESP       EIP     
003ede98 75d9c42d [HelperMethodFrame: 003ede98] 
003edf3c 6b6ed297 System.Security.CodeAccessSecurityEngine.ThrowSecurityException(System.Reflection.Assembly, System.Security.PermissionSet, System.Security.PermissionSet, System.RuntimeMethodHandle, System.Security.Permissions.SecurityAction, System.Object, System.Security.IPermission)
003edf6c 6b6ed345 System.Security.CodeAccessSecurityEngine.ThrowSecurityException(System.Object, System.Security.PermissionSet, System.Security.PermissionSet, System.RuntimeMethodHandle, System.Security.Permissions.SecurityAction, System.Object, System.Security.IPermission)
003edf94 6b6ed4b1 System.Security.CodeAccessSecurityEngine.CheckSetHelper(System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, System.RuntimeMethodHandle, System.Object, System.Security.Permissions.SecurityAction, Boolean)
003edfe4 6b6ed3fb System.Security.CodeAccessSecurityEngine.CheckSetHelper(System.Threading.CompressedStack, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, System.RuntimeMethodHandle, System.Reflection.Assembly, System.Security.Permissions.SecurityAction)
003ee194 6bb21b4c [GCFrame: 003ee194] 
003ee904 6bb21b4c [GCFrame: 003ee904] 
003ee96c 6bb21b4c [GCFrame: 003ee96c] 
003ee9bc 6bb21b4c [GCFrame: 003ee9bc] 
003eea4c 6bb21b4c [DebuggerSecurityCodeMarkFrame: 003eea4c] 
003eea20 6bb21b4c [GCFrame: 003eea20] 
003eeab8 6bb21b4c [HelperMethodFrame: 003eeab8] System.Reflection.MethodBase.PerformSecurityCheck(System.Object, System.RuntimeMethodHandle, IntPtr, UInt32)
003eeb1c 6b24f947 System.Reflection.RuntimeConstructorInfo.Invoke(System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
003eebac 00dbb800 System.Diagnostics.TraceUtils.GetRuntimeObject(System.String, System.Type, System.String)
003eebf0 00dbb6d0 System.Diagnostics.TypedElement.BaseGetRuntimeObject()
003eec04 00dbb457 System.Diagnostics.ListenerElement.GetRuntimeObject()
003eec38 00dbb22a System.Diagnostics.ListenerElementsCollection.GetRuntimeObject()
003eec70 00dbb0a7 System.Diagnostics.TraceInternal.get_Listeners()
003eec9c 005f0369 System.Diagnostics.TraceInternal.WriteLine(System.String)
003eecd8 005f0306 System.Diagnostics.Trace.WriteLine(System.String)
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This stack trace shows us that when we call &lt;code&gt;Trace.WriteLine()&lt;/code&gt; it invokes security checks. This is all fine and well, but my code is executing as FullTrust. Right?&lt;/p&gt;

&lt;p&gt;Well, not exactly. Depending on how you use your custom code it may not execute with FullTrust. For example, if I use my code in an expression it will inherit it’s security from &lt;code&gt;Report_Expressions_Default_Permissions&lt;/code&gt; which is a CodeGroup with a permission set of Execution. This whacks any FullTrust you may have set on your custom code.&lt;/p&gt;

&lt;h2 id=&quot;explanation&quot;&gt;Explanation&lt;/h2&gt;
&lt;p&gt;The SSRS reporting engine hosts it’s own CLR (CLR Integration) and this is where your code will execute. As mentioned in the previous paragraph the “Expressions Engine” will take default permissions of &lt;strong&gt;Execute&lt;/strong&gt;. This causes the code to inherit the lowered security. So, in this case it will perform the security checks required to validate the CAS. Otherwise FullTrust code will cause this check to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.security.permissions.hostprotectionattribute(v=vs.110).aspx&quot;&gt;evaporate&lt;/a&gt; and not be looked at.&lt;/p&gt;

&lt;h2 id=&quot;resolution&quot;&gt;Resolution&lt;/h2&gt;
&lt;p&gt;So, in this case we had the application team remove the &lt;code&gt;Trace.WriteLine()&lt;/code&gt; calls. This kept us from having to put our SSRS server in some insecure state according to this page on &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms154466&quot;&gt;SSRS Security Policies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While this explains the behavior, it does not explain why the code used to work and now it does not. While I would assume there is some change in &lt;/p&gt;

&lt;h2 id=&quot;side-note&quot;&gt;Side Note&lt;/h2&gt;
&lt;p&gt;I had already fixed this issue and moved on to another so I wasn’t able to recreate the EXACT data from the SSRS dump. I did how ever create a quick and dirty integrated host so I could recreate the issue and walk through the stack traces. You can find the code in the following repo: &lt;a href=&quot;https://github.com/jldgit/DebugThingsIntegratedCLRExample&quot;&gt;DebugThingsIntegratedCLRExample&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Debugging - Fixing a deadlock</title>
   <link href="//2014/09/24/critical-section-deadlock/"/>
   <updated>2014-09-24T00:00:00-07:00</updated>
   <id>/2014/09/24/critical-section-deadlock</id>
   <content type="html">&lt;p&gt;More often than not I do postmortem debugging. That is to say, I get a dump file long after the machine has experienced an issue. But, on occasion I get pulled in to take a look at problems that need to be run through the debugger. This article will show you some commands you can use to locate and fix code using WinDbg.&lt;/p&gt;

&lt;p&gt;While I don’t recommend what I am doing for an application you are delivering to production, sometimes you have to be creative when debugging. However, your hands may be tied and this set of solutions could help.&lt;/p&gt;

&lt;p&gt;For this article I am making an assumption you have a working knowledge of WinDbg. As well I suspect you should have working knowledge of C or C++. And also, of Win32. Do I even need to mention the stack?&lt;/p&gt;

&lt;p&gt;If you don’t know them I’d check out the following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/hardware/hh406283(v=vs.85).aspx&quot;&gt;Debugging Using WinDbg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms235629.aspx&quot;&gt;Walkthrough: Creating a Win32 Console Program (C++)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms682516(v=vs.85).aspx&quot;&gt;Creating Threads&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms682530(v=vs.85).aspx&quot;&gt;Critical Section Objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you know everything there is to know about Win32 programming and WinDbg, lets get started. :)&lt;/p&gt;

&lt;h2 id=&quot;the-application&quot;&gt;The Application&lt;/h2&gt;
&lt;p&gt;The application that is being used is a contrived example that demonstrates a deadlock in the purest sense. One application, two threads, two locks out of order.&lt;/p&gt;

&lt;p&gt;The repository for the code &lt;a href=&quot;https://github.com/jldgit/DebugThingsCode&quot;&gt;is here&lt;/a&gt;, and is displayed below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_tmain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_TCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;hStdOut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetStdHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STD_OUTPUT_HANDLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;InitializeCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;InitializeCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tid1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tid2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HANDLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tid1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HANDLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tid2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HANDLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;WaitForMultipleObjects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFINITE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WINAPI&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;Thread1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LPVOID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EnterCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Artificial do work&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EnterCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SetConsoleTextAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hStdOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FOREGROUND_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Thread 1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LeaveCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LeaveCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WINAPI&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LPVOID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EnterCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Artificial do work&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EnterCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;SetConsoleTextAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hStdOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FOREGROUND_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; Thread 2&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LeaveCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LeaveCriticalSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;In this example the problem is simply the locks are out of order. The fix is simple if you have the source code.  Have the locks fire in order and your problems will go away.&lt;/p&gt;

&lt;p&gt;But, what if you don’t have the code? What do you do then? What if the code is critical and just started doing this because of a change in load or a change in the operating system, or … the list goes on and on.&lt;/p&gt;

&lt;p&gt;It’s not often you will encounter this, but you just might.&lt;/p&gt;

&lt;h2 id=&quot;the-solution-overview&quot;&gt;The Solution Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;WinDbg!&lt;/strong&gt; The worlds most loved and hated tool of developers. The pro tool. The last line of defense. When all hope is lost, use WinDbg.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I recommend running all of your C++ code through WinDbg. But, There is no better way to step through your code and get all of the information you need with one tool. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order to fix this problem we need to do the following steps. These steps would take a minute or two in Visual Studio; and once you get to be proficient at WinDbg, it could be just as fast.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Identify the threads being created&lt;/li&gt;
  &lt;li&gt;Identify the locking pattern&lt;/li&gt;
  &lt;li&gt;Locate the locks&lt;/li&gt;
  &lt;li&gt;Change the order in which the locks are executed&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-solution-details&quot;&gt;The Solution Details&lt;/h2&gt;

&lt;p&gt;From here on out I will make some assumptions about your familiarity with the tool and concepts. I may simply state: “Open the executable in WinDbg,” and expect you to know what I mean.&lt;/p&gt;

&lt;h3 id=&quot;step-1---start-the-application&quot;&gt;Step 1 - Start the application&lt;/h3&gt;
&lt;p&gt;Open the CriticalSectionDeadlock executable in WinDbg… &lt;/p&gt;

&lt;h3 id=&quot;step-2---let-it-load&quot;&gt;Step 2 - Let it load&lt;/h3&gt;
&lt;p&gt;Type g in the command line until the command line says &lt;code&gt;Debugee is running...&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-3---inspect-threads&quot;&gt;Step 3 - Inspect threads&lt;/h3&gt;
&lt;p&gt;The application should be in a failed state. We will break into the application by typing &lt;code&gt;Ctrl+Break&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, type &lt;code&gt;~&lt;/code&gt; to view the active threads. You should see a screen that resembles this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:003&amp;gt; ~
   0  Id: 1618.1570 Suspend: 1 Teb: 7efdd000 Unfrozen
   1  Id: 1618.18fc Suspend: 1 Teb: 7efda000 Unfrozen
   2  Id: 1618.bc8 Suspend: 1 Teb: 7efd7000 Unfrozen
.  3  Id: 1618.1bd0 Suspend: 1 Teb: 7efaf000 Unfrozen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;The period(.) next to the Thread Number lets you know that this is the thread you are currently inspecting.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt; type &lt;code&gt;.hh ~&lt;/code&gt; to view the help file for the thread syntax command. You can use &lt;code&gt;.hh&lt;/code&gt; for every single command that you use with WinDbg, save for some of the custom extensions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we can see we have three threads (and one debug thread) we should take a look at what each one is doing. First lest switch to &lt;strong&gt;Thread 1&lt;/strong&gt;. The syntax of the command is &lt;code&gt;~1s&lt;/code&gt;. We can then inspect the call stack using &lt;code&gt;k&lt;/code&gt; to output the methods only or &lt;code&gt;kbn&lt;/code&gt; to display the frame numbers, method name, and the first three arguments. I added the line breaks to make it easier to read.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:001&amp;gt; ~1s
eax=00000000 ebx=00000000 ecx=00000000 edx=00000000 esi=01164450 edi=00000000
eip=77dcf8d1 esp=006df7d8 ebp=006df83c iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
ntdll!ZwWaitForSingleObject+0x15:
77dcf8d1 83c404          add     esp,4

0:001&amp;gt; k
ChildEBP RetAddr  
006df7d8 77de8e44 ntdll!ZwWaitForSingleObject+0x15
006df83c 77de8d28 ntdll!RtlpWaitOnCriticalSection+0x13e
006df864 011610ea ntdll!RtlEnterCriticalSection+0x150
006df880 765b338a CriticalSectionDeadlock!Thread1+0x2a 
006df88c 77de9f72 kernel32!BaseThreadInitThunk+0xe
006df8cc 77de9f45 ntdll!__RtlUserThreadStart+0x70
006df8e4 00000000 ntdll!_RtlUserThreadStart+0x1b

0:001&amp;gt; kbn
 # ChildEBP RetAddr  Args to Child              
00 006df7d8 77de8e44 0000003c 00000000 00000000 ntdll!ZwWaitForSingleObject+0x15

01 006df83c 77de8d28 00000000 00000000 765b10ff ntdll!RtlpWaitOnCriticalSection+0x13e

02 006df864 011610ea 01164450 00000000 00000000 ntdll!RtlEnterCriticalSection+0x150

03 006df880 765b338a 00000000 006df8cc 77de9f72 CriticalSectionDeadlock!Thread1+0x2a 

04 006df88c 77de9f72 00000000 776a58cd 00000000 kernel32!BaseThreadInitThunk+0xe

05 006df8cc 77de9f45 011610c0 00000000 00000000 ntdll!__RtlUserThreadStart+0x70

06 006df8e4 00000000 011610c0 00000000 00000000 ntdll!_RtlUserThreadStart+0x1b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you look at frame 02, you can see that we are entering a critical section. Let’s see if there is anything else going on. We will take a look at &lt;strong&gt;Thread 2&lt;/strong&gt; this time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:002&amp;gt; ~2kbn
 # ChildEBP RetAddr  Args to Child              
00 00b3f970 77de8e44 00000040 00000000 00000000 ntdll!ZwWaitForSingleObject+0x15

01 00b3f9d4 77de8d28 00000000 00000000 765b10ff ntdll!RtlpWaitOnCriticalSection+0x13e

02 00b3f9fc 0116117a 01164438 00000000 00000000 ntdll!RtlEnterCriticalSection+0x150

03 00b3fa18 765b338a 00000000 00b3fa64 77de9f72 CriticalSectionDeadlock!Thread2+0x2a

04 00b3fa24 77de9f72 00000000 77b45a65 00000000 kernel32!BaseThreadInitThunk+0xe

05 00b3fa64 77de9f45 01161150 00000000 00000000 ntdll!__RtlUserThreadStart+0x70

06 00b3fa7c 00000000 01161150 00000000 00000000 ntdll!_RtlUserThreadStart+0x1b

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt; Use the shortcut command &lt;code&gt;~2kbn&lt;/code&gt; which executes the &lt;code&gt;kbn&lt;/code&gt; command without switching to thread 2.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we look at this thread stack we can see that we also are entering a critical section. At the very top of the stack we can see the &lt;code&gt;ZwWaitForSingleObject()&lt;/code&gt; method, this tells me that we’re blocked waiting for this particular CS. Lets take a look at the data behind the CS and find out why.&lt;/p&gt;

&lt;h3 id=&quot;step-4---inspect-criticalsections&quot;&gt;Step 4 - Inspect CRITICAL_SECTION(s)&lt;/h3&gt;
&lt;p&gt;In the previous step we looked at the call stacks of the deadlocked threads. Judging from those call stacks we know that we are entering a critical section and we are waiting on something. But what are we waiting on?&lt;/p&gt;

&lt;p&gt;In order to synchronize the critical sections Windows needs to be able to signal to other threads when it becomes available. In order to do this it uses a reset event. Let’s take a look at the &lt;code&gt;ZwWaitForSingleObject()&lt;/code&gt; parameters on &lt;strong&gt;Thread 2&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:001&amp;gt; ~2kbn 1
 # ChildEBP RetAddr  Args to Child              
00 00b3f970 77de8e44 00000040 00000000 00000000 ntdll!ZwWaitForSingleObject+0x15

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This method is waiting on a handle (&lt;code&gt;40&lt;/code&gt;). Let’s take a look at the handle in the parameter by using the &lt;code&gt;!handle&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:001&amp;gt; !handle 40
Handle 40
  Type          Event

0:001&amp;gt; !handle 40 f
Handle 40
  Type          Event
  Attributes    0
  GrantedAccess 0x100003:
         Synch
         QueryState,ModifyState
  HandleCount   2
  PointerCount  4
  Name          &amp;lt;none&amp;gt;
  Object Specific Information
    Event Type Auto Reset
    Event is Waiting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see that this handle is an auto reset event, but for what? We know that we are waiting on a critical section, let’s confirm it’s relationship. Let’s inspect the critical section using the &lt;code&gt;!cs&lt;/code&gt; command, with the parameter from the &lt;code&gt;RtlEnterCriticalSection()&lt;/code&gt; function in frame 02 (&lt;code&gt;01164438&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:002&amp;gt; !cs 01164438 
-----------------------------------------
Critical section   = 0x01164438 (CriticalSectionDeadlock!cs2+0x0)
DebugInfo          = 0x0079a1b0
LOCKED
LockCount          = 0x1
WaiterWoken        = No
OwningThread       = 0x000018fc
RecursionCount     = 0x1
LockSemaphore      = 0x40
SpinCount          = 0x00000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see that we are indeed waiting on this critical section’s lock semaphore (auto reset event). But, if the other thread is trying to enter a different critical section, why are we blocked? This is because this critical section is already LOCKED, as indicated by the &lt;code&gt;!cs&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;In fact, it is locked by thread &lt;code&gt;0x18fc&lt;/code&gt;, let’s find out who that is. Use the &lt;code&gt;~~[TID]&lt;/code&gt; command for this.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:001&amp;gt; ~~[0x18fc]
.  1  Id: 1618.18fc Suspend: 1 Teb: 7efda000 Unfrozen
      Start: CriticalSectionDeadlock!Thread1 (011610c0)
      Priority: 0  Priority class: 32  Affinity: ff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Look at that. It is &lt;strong&gt;Thread 1&lt;/strong&gt;. But, we don’t see the call to that critical section in the call stack.  We can only assume that the call has came and went. Let’s find out how these calls are made inside of the &lt;code&gt;Thread1()&lt;/code&gt; and &lt;code&gt;Thread2()&lt;/code&gt; functions. We will need to take a look at the disassembly of the &lt;code&gt;Thread2()&lt;/code&gt; function located at stack frame 03 for &lt;strong&gt;Thread 2&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-5---inspect-the-code&quot;&gt;Step 5 - Inspect the code&lt;/h3&gt;
&lt;p&gt;Now that we’re certain we have a blocked thread we need to take a look at the functions that are part of this executable. In order to do that we will use the un-assemble &lt;code&gt;u&lt;/code&gt; command, and use the &lt;code&gt;uf&lt;/code&gt; variant to un-assemble a function. I added line breaks to make some lines easier to read.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;c&quot;&gt;# CriticalSectionDeadlock!Thread2:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ebp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;nf&quot;&gt;and&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FFFFFFF8h&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__Sleep&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__EnterCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;nf&quot;&gt;xor&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;&lt;span class=&quot;c&quot;&gt;# CriticalSectionDeadlock!Thread2+0x18:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;hStdOut&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164468&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__SetConsoleTextAttribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char_traits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01161420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;coutstd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;&lt;span class=&quot;nf&quot;&gt;inc&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;??&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$basic_ostreamDU&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$char_traitsDstdstdQAEAAV01HZ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163064&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!`&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;011631&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;a4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char_traits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;011611&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;e0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;&lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;??&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$basic_ostreamDU&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$char_traitsDstdstdQAEAAV01P6AAAV01AAV01ZZ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163068&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FAh&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__LeaveCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0116301&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-40&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__LeaveCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0116301&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-41&quot;&gt;&lt;span class=&quot;nf&quot;&gt;jmp&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01161168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I won’t walk this code line by line, but I will point out some interesting parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Storing the EnterCriticalSection function pointer in $edi&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__EnterCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Calls to $edi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We first &lt;code&gt;push&lt;/code&gt; the critical section to the stack and then call the function located at $edi. The addresses to the left are important.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These two parts of the code are critical to understanding the code flow and how we will go about editing the application to get it to work.&lt;/p&gt;

&lt;p&gt;What we need to do now is locate this function in memory and edit the &lt;code&gt;push&lt;/code&gt; instruction to push the proper instructions.&lt;/p&gt;

&lt;h3 id=&quot;step-6---edit-the-code&quot;&gt;Step 6 - Edit the code&lt;/h3&gt;
&lt;p&gt;First a little background on x86 architecture and what we are looking at here. The Intel x86 architecture uses &lt;a href=&quot;http://en.wikipedia.org/wiki/Endianness&quot;&gt;little endian&lt;/a&gt; byte order. So, instead of looking at a WORD starting at 0x00 and ending at 0x01 in order from left to right, it would be reversed.&lt;/p&gt;

&lt;p&gt;So, 0XDEAD would be represented in memory as it is show, but would be 0xADDE when passed to the instruction.&lt;/p&gt;

&lt;p&gt;Let’s look at the instruction at address &lt;code&gt;0x01161168&lt;/code&gt; in the &lt;code&gt;Thread2()&lt;/code&gt; function. We will use the display memory &lt;code&gt;d&lt;/code&gt; command to do so.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;Size of Pointers
0:002&amp;gt; dp 0x01161168 L 4
01161168  16445068 6ad7ff01 68d3ff05 01164438

Size of Words
0:002&amp;gt; dw 0x01161168 L 4
01161168  5068 1644 ff01 6ad7

Size of Bytes
0:002&amp;gt; db 0x01161168 L 5
01161168  68 50 44 16 01

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that I specified length using L. Pay attention to the last command when I displayed the bytes and notice I specified the number 5. Why?&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;push&lt;/code&gt; instruction on x86 is represented by one byte (&lt;code&gt;0x68&lt;/code&gt;) plus four bytes for the address (&lt;code&gt;0x01164450&lt;/code&gt;). &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Notice how the bytes aren’t really in an order you expect to see them? The reason for this is they a normal address is a double word and would have to be aligned on a word boundary to be displayed properly.&lt;/p&gt;

  &lt;p&gt;Since instructions can (and usually are) odd sizes the code ends up misaligned. This is okay because the real issue is getting a code segment to fit into a cache line to be run by the processor. In most cases your entire function code block is aligned on a proper boundary.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since our main code defined the two critical sections directly next to each other the compiler gave them sequential addresses (plus the size of the object).  In reality it doesn’t always behave this way, but this sample application happens to.&lt;/p&gt;

&lt;p&gt;Now all we need to do is edit the proper byte in the function instruction to swap the order of the calling sequence. We can do this by using the edit memory &lt;code&gt;e&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The instruction addresses I’m concerned with are the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;EnterCriticalSection order:
01161168 6850441601      push    offset CriticalSectionDeadlock!cs1 (01164450)
01161173 6838441601      push    offset CriticalSectionDeadlock!cs2 (01164438)

LeaveCriticalSection order:
011611ba 6850441601      push    offset CriticalSectionDeadlock!cs1 (01164450)
011611c5 6838441601      push    offset CriticalSectionDeadlock!cs2 (01164438)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The actual edit command. &lt;em&gt;I will repeat this for each of the addresses substituting the proper byte.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;Before:
0:002&amp;gt; db 0x01161168+0x1 L 1
01161169  50 

After:
0:002&amp;gt; eb 0x01161168+0x1 38
0:002&amp;gt; db 0x01161168+0x1 L 1
01161169  38  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt; Do not edit more than you need to. In the previous example the instructions only differed by 1 byte.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the resulting assembly.  Look for the code at the addresses we’ve changed and you will see the order of the locks has changed.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span id=&quot;line-1&quot;&gt;&lt;span class=&quot;nf&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-2&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebp&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-3&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ebp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-4&quot;&gt;&lt;span class=&quot;nf&quot;&gt;and&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FFFFFFF8h&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-5&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-6&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-7&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__Sleep&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-8&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-9&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-10&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__EnterCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-11&quot;&gt;&lt;span class=&quot;nf&quot;&gt;xor&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-12&quot;&gt;
&lt;/span&gt;&lt;span id=&quot;line-13&quot;&gt;&lt;span class=&quot;nf&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-14&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-15&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-16&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-17&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-18&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-19&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;edi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-20&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-21&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;hStdOut&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164468&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-22&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__SetConsoleTextAttribute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-23&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char_traits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01161420&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-24&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-25&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;coutstd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-26&quot;&gt;&lt;span class=&quot;nf&quot;&gt;inc&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-27&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;esi&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-28&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;??&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$basic_ostreamDU&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$char_traitsDstdstdQAEAAV01HZ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163064&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-29&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!`&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;011631&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;a4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-30&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-31&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char_traits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;011611&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;e0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-32&quot;&gt;&lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-33&quot;&gt;&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;eax&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-34&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;??&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$basic_ostreamDU&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;$char_traitsDstdstdQAEAAV01P6AAAV01AAV01ZZ&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01163068&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-35&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FAh&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-36&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;ebx&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-37&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-38&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__LeaveCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0116301&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-39&quot;&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;cs1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01164450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-40&quot;&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;no&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;_imp__LeaveCriticalSection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0116301&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id=&quot;line-41&quot;&gt;&lt;span class=&quot;nf&quot;&gt;jmp&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;CriticalSectionDeadlock&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thread2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01161168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-7---run-it&quot;&gt;Step 7 - Run it!&lt;/h3&gt;
&lt;p&gt;Go on, hit g. Let your code run! GO ON.&lt;/p&gt;

&lt;p&gt;Did you do it? Why isn’t it running?&lt;/p&gt;

&lt;p&gt;Don’t forget, you’re still in a wait state. We have to clear that. But, how?&lt;/p&gt;

&lt;p&gt;Before the application makes the first call into the thread functions you can over write them and test to see if the fix works. There is not much you need to do here.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch WinDbg and run executable&lt;/li&gt;
  &lt;li&gt;Wait for WinDbg to break before loading file (first break)&lt;/li&gt;
  &lt;li&gt;Load executable with &lt;code&gt;ld&lt;/code&gt; command&lt;/li&gt;
  &lt;li&gt;Patch the function&lt;/li&gt;
  &lt;li&gt;Run&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; There is another way to do this that involves using the &lt;code&gt;.call&lt;/code&gt; command. In order to use it you need proper symbols so you can execute the function. WinDbg needs the function prototype for this to work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;step-8---patching-the-executable&quot;&gt;Step 8 - Patching the executable&lt;/h3&gt;
&lt;p&gt;This step is not for the faint of heart, but I will describe it anyway.&lt;/p&gt;

&lt;p&gt;So, you can’t just dump an executable from memory. By the time it is loaded Windows has fixed up your imports and exports, translated all of your RVAs and loaded the file into properly aligned memory sections.&lt;/p&gt;

&lt;p&gt;The result is code that will execute if loaded into a process at the exact same address as you dumped it. Not likely. In fact, if you attempted to dump the file with the same exact length you will get a partial file.&lt;/p&gt;

&lt;p&gt;What you need to do is patch the executable before it gets translated. There are some decent tools out there that allow you to save a patched version of an executable as you are debugging it. &lt;a href=&quot;http://www.ollydbg.de/&quot;&gt;OllyDbg&lt;/a&gt; comes to mind.&lt;/p&gt;

&lt;p&gt;We can do this in WinDbg. It just takes some finesse. &lt;/p&gt;

&lt;h3 id=&quot;step-81---finding-the-rva-and-file-location&quot;&gt;Step 8.1 - Finding the RVA and file location&lt;/h3&gt;
&lt;p&gt;I’d say the first real step is finding the location of the function inside of the actual executable file. In order to do this I will use &lt;code&gt;DUMPBIN&lt;/code&gt; which can be found in the Visual Studio Tools package.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You will also want to get the RVA of the critical sections.  We won’t be dumping any information about them, but it will help in step 7.2.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To locate the RVA of &lt;strong&gt;Thread2&lt;/strong&gt; run the following, the output is below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;dumpbin /relocations CriticalSectionDeadlock.exe | findstr /i Thread2


87  HIGHLOW            00401150  ?Thread2@@YGKPAX@Z (unsigned long __stdcall Thread2(void *))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make note of the address 00401150. Your address &lt;strong&gt;could&lt;/strong&gt; be different, but it is not likely because that is the standard base address for PE32 files. You can rebase your images if you want, but that is a different topic.&lt;/p&gt;

&lt;p&gt;To locate the RVA of the &lt;strong&gt;critical sections&lt;/strong&gt; type the following, the output is below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;dumpbin /relocations CriticalSectionDeadlock.exe | findstr /i cs.@


      51  HIGHLOW            00404450  ?cs1@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs1)
      5D  HIGHLOW            00404438  ?cs2@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs2)
      D9  HIGHLOW            00404438  ?cs2@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs2)
      E4  HIGHLOW            00404450  ?cs1@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs1)
     12B  HIGHLOW            00404438  ?cs2@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs2)
     136  HIGHLOW            00404450  ?cs1@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs1)
     169  HIGHLOW            00404450  ?cs1@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs1)
     174  HIGHLOW            00404438  ?cs2@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs2)
     1BB  HIGHLOW            00404450  ?cs1@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs1)
     1C6  HIGHLOW            00404438  ?cs2@@3U_RTL_CRITICAL_SECTION@@A (struct
_RTL_CRITICAL_SECTION cs2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make note of the addresses 00404450 and 00404438. Your address &lt;strong&gt;could&lt;/strong&gt; be different.&lt;/p&gt;

&lt;p&gt;Once you have your RVA location for the &lt;code&gt;Thread2()&lt;/code&gt; function we can find the location it should be in the actual file. Run the following command to work it out.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;dumpbin CriticalSectionDeadlock.exe /headers

Which outputs:

Microsoft (R) COFF/PE Dumper Version 12.00.30723.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file CriticalSectionDeadlock.exe

PE signature found

File Type: EXECUTABLE IMAGE

FILE HEADER VALUES
             14C machine (x86)
               5 number of sections
        542317A3 time date stamp Wed Sep 24 15:12:35 2014
               0 file pointer to symbol table
               0 number of symbols
              E0 size of optional header
             102 characteristics
                   Executable
                   32 bit word machine

OPTIONAL HEADER VALUES
             10B magic # (PE32)
           12.00 linker version
            1600 size of code
            1C00 size of initialized data
               0 size of uninitialized data
            1F0B entry point (00401F0B) _wmainCRTStartup
            1000 base of code
            3000 base of data
          400000 image base (00400000 to 00406FFF)
            1000 section alignment
             200 file alignment

... removed for brevity ...

SECTION HEADER #1
   .text name
    153B virtual size
    1000 virtual address (00401000 to 0040253A)
    1600 size of raw data
     400 file pointer to raw data (00000400 to 000019FF)
       0 file pointer to relocation table
       0 file pointer to line numbers
       0 number of relocations
       0 number of line numbers
60000020 flags
         Code
         Execute Read

... removed for brevity ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command outputs the RVA (virtual address) starting point and it also gives us the file pointer. We can use this to work out the actual location of the function inside of the file. This will be critical for the next step.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;  RVA of function:      00401150
- Image Base:           00400000
- VA Starting Address:  00001000
+ File Pointer Offset:  00000400
--------------------------------
Location in file:       00000550

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The location of the start of &lt;code&gt;Thread2()&lt;/code&gt; in the executable is &lt;strong&gt;0x500&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-82---loading-the-file-into-windbg&quot;&gt;Step 8.2 - Loading the file into WinDbg&lt;/h3&gt;
&lt;p&gt;Now that we have the file offset, we need to load it into WinDbg to alter the code. The assembly will look a bit different but you will get it once you see it.&lt;/p&gt;

&lt;p&gt;In order to load the file into WinDbg you need to allocate space with &lt;code&gt;.dvalloc&lt;/code&gt; and then you need to read the file into memory using &lt;code&gt;.readmem&lt;/code&gt;. Once it’s loaded you can use &lt;code&gt;uf&lt;/code&gt; to inspect the function.&lt;/p&gt;

&lt;p&gt;Please note the address returned by &lt;code&gt;.dvalloc&lt;/code&gt; can be different depending on a few factors. Mind the address that is returned by this command. Also note that the radix for these commands is 16, so all of the numbers are in hex.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:000&amp;gt; .dvalloc 0n13000
Allocated 4000 bytes starting at 000f0000

0:000&amp;gt; .readmem ..\..\CriticalSectionDeadlock2.exe 0xf0000 L 0n12800
Reading 3200 bytes.......

0:000&amp;gt; uf 0xf0000+0x550
000f0550 55              push    ebp
000f0551 8bec            mov     ebp,esp
000f0553 83e4f8          and     esp,0FFFFFFF8h
000f0556 51              push    ecx
000f0557 53              push    ebx
000f0558 8b1d14304000    mov     ebx,dword ptr ds:[403014h]
000f055e 56              push    esi
000f055f 57              push    edi
000f0560 8b3d10304000    mov     edi,dword ptr ds:[403010h]
000f0566 33f6            xor     esi,esi

000f0568 6850444000      push    404450h
000f056d ffd7            call    edi
000f056f 6a05            push    5
000f0571 ffd3            call    ebx
000f0573 6838444000      push    404438h
000f0578 ffd7            call    edi
000f057a 6a02            push    2
000f057c ff3568444000    push    dword ptr ds:[404468h]
000f0582 ff1518304000    call    dword ptr ds:[403018h]
000f0588 6820144000      push    401420h
000f058d 51              push    ecx
000f058e 8b0d80304000    mov     ecx,dword ptr ds:[403080h]
000f0594 46              inc     esi
000f0595 56              push    esi
000f0596 ff1564304000    call    dword ptr ds:[403064h]
000f059c baa4314000      mov     edx,4031A4h
000f05a1 8bc8            mov     ecx,eax
000f05a3 e838000000      call    000f05e0
000f05a8 83c404          add     esp,4
000f05ab 8bc8            mov     ecx,eax
000f05ad ff1568304000    call    dword ptr ds:[403068h]
000f05b3 68fa000000      push    0FAh
000f05b8 ffd3            call    ebx
000f05ba 6850444000      push    404450h
000f05bf ff151c304000    call    dword ptr ds:[40301Ch]
000f05c5 6838444000      push    404438h
000f05ca ff151c304000    call    dword ptr ds:[40301Ch]
000f05d0 eb96            jmp     000f0568


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will notice this disassembly looks close to the disassembly in previous steps. However, none of the symbols are resolved. That’s because this file isn’t actually loaded, it is just resident in memory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using Steps 5, 6 and 7 you can write the proper bytes to the function as you did before while debugging it.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-83---writing-the-file-to-disk&quot;&gt;Step 8.3 - Writing the file to disk&lt;/h3&gt;
&lt;p&gt;We’re in the home stretch. If you’ve made it this far, you’re an animal. After we’ve deduced all of the information we need to about the file and corrected the bug, we need to save the file.&lt;/p&gt;

&lt;p&gt;To do this we will use the &lt;code&gt;.witemem&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;0:000&amp;gt; .writemem c:\temp\fixedfile.exe 0xf0000 L 0n12800
Writing 3200 bytes.......

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats it! &lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This article series showed us how to work with the debugger, fix a bug, and then patch an executable all without using the source code or Visual Studio.&lt;/p&gt;

&lt;p&gt;As I said before WinDbg is a powerful tool with a steep learning curve. But, once you get inside and poke around, it’s not so bad. I hope you found this article helpful. Leave me a tweet &lt;a href=&quot;https://twitter.com/debugthings&quot;&gt;@debugthings&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Bandwidth. It's not free...</title>
   <link href="//2014/09/23/bandwidth/"/>
   <updated>2014-09-23T00:00:00-07:00</updated>
   <id>/2014/09/23/bandwidth</id>
   <content type="html">&lt;p&gt;Usually when I performance test internal applications I don’t consider bandwidth unless I know we’re doing something irrational like transferring multi gigabyte files all the time. And even then I only consider it if we’re crossing a WAN or some other “slow” link between sites. But, every now and then there is a project that runs over the Internet and it is very data intensive. And, a lot of that data is out of the control of the developers (images, 3rd party libraries, fonts).&lt;/p&gt;

&lt;p&gt;It’s a given that it will cost you money, but how much? A dedicated link can run anywhere from $100 a month on a broadband backbone, all the way up to $50,000 for Gbit Level3 Fiber. How much money you want to spend on your connection depends on the amount of content you need to control.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may find that if you do some tuning on bandwidth you can save your self hundreds of thousands of dollars per year.&lt;/strong&gt; You read that right, &lt;strong&gt;hundreds of thousands of dollars&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;
&lt;p&gt;Recently I was working on a launch of a new website and the main concern was hitting our requests per second target for daily use and what a holiday spike would look like. This is how things normally go. It’s easy. You drive load into the system until it eventually cracks. You suggest a fix. It gets implemented. Repeat.&lt;/p&gt;

&lt;p&gt;So, here we are about 3 weeks out from our go-live date. We spent months on tuning the system to run as lean as possible. We turned logging down. Compression on. SSL offloading. SQL tuning. Everything. We were ready.&lt;/p&gt;

&lt;p&gt;Yet, while doing all of this there wasn’t much visual content on the site. It wasn’t until this point in the project that “real” images and verbiage were coming in. When it did our bandwidth consumption jumped considerably. I don’t mean 2 times; 10 times. &lt;strong&gt;TEN TIMES&lt;/strong&gt;. We had to find out just how much data we were pushing, and we needed to know what it looked like from outside of the datacenter.&lt;/p&gt;

&lt;h3 id=&quot;bandwidth-estimation&quot;&gt;Bandwidth Estimation&lt;/h3&gt;
&lt;p&gt;Before we start running load tests willy nilly out on the open internet we need to do some math. Not hard math, but some fuzzy math to calculate our potential load. I will give some examples with a common website.&lt;/p&gt;

&lt;p&gt;For this I always use &lt;a href=&quot;http://www.telerik.com/fiddler&quot;&gt;Fiddler&lt;/a&gt;. There are some great plugins that will help you determine impact of change as well. Here is an &lt;a href=&quot;http://www.telerik.com/fiddler/web-app-performance-testing&quot;&gt;overview&lt;/a&gt; of what it can provide. These next few sections assume you’re somewhat familiar with Fiddler. I will include a few small steps but nothing in-depth. This isn’t a Fiddler tutorial.&lt;/p&gt;

&lt;p&gt;When we first navigate to &lt;a href=&quot;http://www.microsoft.com/&quot;&gt;www.microsoft.com&lt;/a&gt; we will see the total amount of requests that are sent over. We can see this by selecting all of the requests that make up a page. In this case the home page. I have trimmed off some extra data for brevity.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;Request Count:   51
Unique Hosts:    14
Bytes Sent:      36,471		(headers:36,471; body:0)
Bytes Received:  884,345	(headers:27,698; body:856,647)

ACTUAL PERFORMANCE
--------------
Requests started at:		16:34:22.077
Responses completed at:		16:34:25.057
Sequence (clock) duration:	00:00:02.9801705
Aggregate Session duration:	00:00:06.823
DNS Lookup time:			1,295ms
TCP/IP Connect duration:	1,181ms

.. response codes snipped ...

RESPONSE BYTES (by Content-Type)
--------------
               image/jpg: 382,186
application/x-javascript: 184,279
application/octet-stream: 86,289
               image/png: 70,863
         text/javascript: 66,832
               text/html: 40,260
               ~headers~: 27,698
                text/css: 19,181
               image/gif: 6,757

... hosts and timing estimates removed ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For my purposes a very important line was needed. In particular the amount of bytes. More over we need to convert this to bits.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;Bytes Received:  884,345		(headers:27,698; body:856,647)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Armed with this information I could start calculating some of this fuzzy math. I knew that if we had 100Mbit of bandwidth and the majority of our users would get &lt;strong&gt;about&lt;/strong&gt; the same speed then we can use this formula going forward. This generates a theoretical maximum.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;((Bytes Received) * 8) / (Sequence (clock) duration) = effective bandwidth

(884,345B * 8b) / 2.98s = 2,374,080 = 2.4Mbit/sec

100Mbit/sec / 2.4Mbit/sec = 42 THEORETICAL simultaneous NEW page transfers in 3 seconds (14/sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In reality we more than likely won’t be able to hit 42. If we kind of squint our eyes and do some estimating we will need to reduce the number of actual page transfers. I always use the 80% rule. So really we could do about 34 new page loads at one time and be safe.&lt;/p&gt;

&lt;p&gt;Great. We have a number to shoot for. We’re done right? Well, no. If you went to your management and said, we can handle 34 pages per second, you might get a sideways look and be asked to explain.&lt;/p&gt;

&lt;p&gt;It may be more helpful to aggregate into minutes and even further translate that to users or sessions per minute. As you fuzz your numbers it may help make the overall point. Regardless of how fast the end user is there is a finite maximum number of pages that can be delivered in a finite amount of time.&lt;/p&gt;

&lt;p&gt;So, what do you do next? &lt;/p&gt;

&lt;h3 id=&quot;deep-estimation&quot;&gt;Deep Estimation&lt;/h3&gt;
&lt;p&gt;Once you have done your naive estimation, you need to follow up and employ due diligence. Try and flow through the heaviest use cases and do the same math. If there aren’t any cases yet, make it up! Remember that what ever your QA team can’t find a user will find the first time.&lt;/p&gt;

&lt;p&gt;I believe that you have the same abilities. You, dear reader, can behave just like a user. Because, lets face it, you are a user deep in your soul. You order from Amazon, you poke around Ebay, you Google things wrong from time to time. Use this power. Embrace it. Go.&lt;/p&gt;

&lt;p&gt;Once you identify the pages, the transfer times, and estimated mixtures you can stop right? No. You need to go a step further and start estimating your return users and how that will affect caching. You are caching aren’t you?&lt;/p&gt;

&lt;h3 id=&quot;caching-estimation&quot;&gt;Caching Estimation&lt;/h3&gt;
&lt;p&gt;Ah, yes. If you forgot, most modern browsers will adhere to caching rules. You need to use this to your advantage. Especially if you have some idea of how many users will be return.&lt;/p&gt;

&lt;p&gt;If we visit the same page(s) as before we can capture the same Fiddler statistics to get an idea of our cached content. If you look at the data below it looks as as if we have 20 times LESS data than before. So, in the naive approach we can transfer about 20 times the amount of page views when we have 100% return visitors. Here is an &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb250442(v=vs.85).aspx&quot;&gt;excellent MSDN article&lt;/a&gt; on HTTP performance using Fiddler; read it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;Request Count:   17
Unique Hosts:    9
Bytes Sent:      15,501		(headers:15,501; body:0)
Bytes Received:  48,860		(headers:5,252; body:43,608)

ACTUAL PERFORMANCE
--------------
Requests started at:		17:03:17.465
Responses completed at:		17:03:19.177
Sequence (clock) duration:	00:00:01.7120980
Aggregate Session duration:	00:00:02.368
DNS Lookup time:			121ms
TCP/IP Connect duration:	876ms

RESPONSE CODES
--------------
HTTP/200: 	14
HTTP/304: 	3

RESPONSE BYTES (by Content-Type)
--------------
               text/html: 40,143
               ~headers~: 5,252
application/x-javascript: 2,978
         text/javascript: 401
               image/gif: 86

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the real world you won’t have that many return visitors. Depending on the type of requests you have (dynamic v. static) and what your business model is like (information or sales) you could be more in the camp of 30% to 50% return. You know your data best. I could offer some foolhardy estimates based on experience, but it would do you a disservice. Explore your data and know your numbers.&lt;/p&gt;

&lt;p&gt;Now, lets take this data and apply some fuzz to it and see what our effective rate at load would be.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;New users:
14 pages/sec * 60sec = 840pages/minute * 50% = 420

Return Users:
280 pages/sec * 60sec = 16800/minute * 50% = 8400

Total:
8820 pages per minute

Fuzzed number (80%):
7056 pages per minute

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, this number sounds more like a enterprise level application. But, it seems kind of high.&lt;/p&gt;

&lt;h3 id=&quot;user-estimation&quot;&gt;User Estimation&lt;/h3&gt;
&lt;p&gt;Our goal is to find out if we have enough bandwidth to support our day one user base. Here is an example of our test case:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actual Usage&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normal Scenario&lt;/li&gt;
  &lt;li&gt;5,000 Users &lt;/li&gt;
  &lt;li&gt;2 - 3 pages per session&lt;/li&gt;
  &lt;li&gt;3,000 sessions per minute&lt;/li&gt;
  &lt;li&gt;6,000 pages per minute&lt;/li&gt;
  &lt;li&gt;Mobile&lt;/li&gt;
  &lt;li&gt;500 Users&lt;/li&gt;
  &lt;li&gt;4 - 5 pages per session&lt;/li&gt;
  &lt;li&gt;1,000 session per minute&lt;/li&gt;
  &lt;li&gt;5,000 pages per minute&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Virtual Usage&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normal Scenario&lt;/li&gt;
  &lt;li&gt;1,000 virtual users&lt;/li&gt;
  &lt;li&gt;50% Return Visitors&lt;/li&gt;
  &lt;li&gt;3 - 5 pages per test&lt;/li&gt;
  &lt;li&gt;2,000 test per minute&lt;/li&gt;
  &lt;li&gt;6,000 pages per minute&lt;/li&gt;
  &lt;li&gt;Mobile&lt;/li&gt;
  &lt;li&gt;200 virtual users&lt;/li&gt;
  &lt;li&gt;40% Return Visitors&lt;/li&gt;
  &lt;li&gt;4 - 5 pages per test&lt;/li&gt;
  &lt;li&gt;1,000 tests per minute&lt;/li&gt;
  &lt;li&gt;4,000 pages per minute&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This test load simulated production traffic with less users than were reported on the site.  By sacrificing “actual” user load you can save some additional overhead of extraneous virtual users. This will come in handy later when you get to the bottom of the page.&lt;/p&gt;

&lt;h3 id=&quot;caution&quot;&gt;Caution&lt;/h3&gt;
&lt;p&gt;We now have a page goal, and our possible load pattern. I urge you to exercise caution here. If you were keeping up and doing the math yourself you probably noticed were doing somewhere around 2,600 requests per second. Even at 260 requests/sec per server your looking at 10 servers serving this web site. Is that too many, is it not enough? &lt;/p&gt;

&lt;p&gt;Don’t get caught up in the theoretical maximums. It is in everyone’s best interest to test as often as you can. Especially when you suggest a change, no matter how small. When in doubt, look at my previous blog post &lt;a href=&quot;/2014/09/16/always-performance-test/&quot;&gt;Always Performance Test!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sanity-check&quot;&gt;Sanity Check&lt;/h3&gt;
&lt;p&gt;Now is the time to apply some best practices before you test. Before you go all out on an external test, here are some low hanging fruit that will improve your bandwidth.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Caching
	- Make use of the caching tab in Fiddler&lt;/li&gt;
  &lt;li&gt;Static Resource Sizes
	- Images
	- CSS
	- JS&lt;/li&gt;
  &lt;li&gt;Page Sizes
	- Static
	- Dynamic&lt;/li&gt;
  &lt;li&gt;Bundling
	- Most web frameworks have a package that will bundle and minify&lt;/li&gt;
  &lt;li&gt;Minification
    &lt;ul&gt;
      &lt;li&gt;If you can’t bundle, you should minify&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Compression
	- Above all else you should compress&lt;/li&gt;
  &lt;li&gt;Content Delivery Network
	- If all else fails, seriously consider this
	- Some common libraries are CDN’d for free, like jQuery on Google for instance&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;can-we-test-now&quot;&gt;Can We Test Now?!&lt;/h3&gt;
&lt;p&gt;Yes. Go ahead and start putting together a plan to test from the outside. &lt;/p&gt;

&lt;p&gt;It’s no secret that when you use a Microsoft product it will cost you. But, in this case, you can easily map out the amount of money you need to spend. I haven’t used any other services that integrate so well with a tool set I’m familiar with. VSO, provided a great platform to test on. I was even able to bring that data back into my local load test database. No I’m not some shill recommending random products. It was genuinely a pleasant experience and I highly recommend it.&lt;/p&gt;

&lt;p&gt;Knowing my goal allowed me to save a lot of money. The going rate for testing in the cloud at the time of this writing is $0.002 per user minute. For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code&gt;1000 virtual users x 30 minutes = 30,000 virtual user minutes * $0.002 = $60
5000 virtual users x 30 minutes = 150,000 virtual user minutes * $0.002 = $300
5000 virtual users x 60 minutes = 300,000 virtual user minutes * $0.002 = $600
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you can afford some bad response times at the beginning of your test you should attempt to shorten your ramp-up time. So, if your normal user load takes 2 hours to be at capacity you can try shortening that to 10 or 20 minutes on an internal load test and see how your system handles it. Once you confirm you can take that kind of hit you should alter your load test to match that. Next, if your test had normally run for a couple of hours, you should consider only running for 30 minutes. &lt;/p&gt;

&lt;p&gt;I know, I know. That is not a great amount of testing, but it all depends on what your goals are.  If you have tons of disposable cash then by all means crank up 10,000 users and have them sit idle for hours on end.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We all know bandwidth costs money. But you can really save yourself a ton of &lt;strong&gt;actual&lt;/strong&gt; dollars, and you can greatly enhance your user experience. Some of the glamor in performance testing, if there is such a thing, is finding that critical bit of code that would have taken down the site. But, we should not neglect this very fundamental test metric.&lt;/p&gt;

&lt;p&gt;This wasn’t really meant as a tutorial but an overview of a process that may be skirted from time to time. It’s easy to forgo certain tests and skip over goals. Here are a few more links that will help out &lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;Web Fundamentals&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/docs/insights/rules&quot;&gt;PageSpeed Insights&lt;/a&gt;, &lt;a href=&quot;https://developer.yahoo.com/performance/rules.html&quot;&gt;Yahoo Best Practices&lt;/a&gt;(a bit older but useful).&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Always Performance Test!</title>
   <link href="//2014/09/16/always-performance-test/"/>
   <updated>2014-09-16T00:00:00-07:00</updated>
   <id>/2014/09/16/always-performance-test</id>
   <content type="html">&lt;p&gt;While thumbing through Twitter I ran across an &lt;a href=&quot;http://apmblog.compuware.com/2014/09/16/detecting-bad-deployments-resource-impact-response-time-hotspot-garbage-collection/&quot;&gt;article&lt;/a&gt; written by &lt;a href=&quot;https://twitter.com/grabnerandi&quot;&gt;@grabnerandi&lt;/a&gt; about a company not being able to load test a change for dependency injection. I can’t tell you how many times in my job that performance testing has been brushed over for speed to market.&lt;/p&gt;

&lt;p&gt;Look, I get it. &lt;strong&gt;Money&lt;/strong&gt;. There, I said it. Most of the time the driving factor for not doing something you should be disciplined about is the bottom line. While I get it I don’t like it. I have had to inject myself into a release process to be the harbinger of doom. I try not to get all “the sky is falling,” but in reality it could.&lt;/p&gt;

&lt;p&gt;I know, I know. &lt;strong&gt;Time&lt;/strong&gt;. Right after money, but usually goes hand-in-hand, is time. This excuse gets even the best of us. Does anyone have time? No. Do we do it anyway? Sometimes. I’d like to say that while being the performance testing and DevOps advocate that I just ooze availability. But, I don’t. Just like everyone else I have constraints.&lt;/p&gt;

&lt;p&gt;What does it mean? Money + Time = &lt;strong&gt;Effort&lt;/strong&gt;. It always comes down to effort. This is the way to merge both time and money into one shortsighted mess. The effort required to test is usually deemed greater than the effort to just put it in. This is the death bringer of many of once stable applications.&lt;/p&gt;

&lt;h2 id=&quot;story-time&quot;&gt;Story Time&lt;/h2&gt;
&lt;p&gt;A while ago our team was asked to performance test a new web application. We got our grubby little hands on it we shredded the code and the database layout. Only to be met with “No one runs it like that.” Apparently we were “no one.” As a good performance testing team we provided solutions to the problems and the application team would make sure they went in. &lt;/p&gt;

&lt;p&gt;Ever since then, just about every dot release (x.1, x.2, etc.) has been tested by our team. A lot of things change from version to version, but we now had enough experience with the style of the developers and could keep up with the changes. Each time we found one or two things, but we rarely had major problems like we did in the first few releases. Our performance results always came back with positive results.&lt;/p&gt;

&lt;p&gt;Fast forward about 2 years. Multiple major and minor releases have come and went without issue. The application team had requested a new feature a few months ago and it was now ready for deployment. The change was “small” and carried only a couple of new screens. &lt;em&gt;Our team never even heard about it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On go live, the applications started out fine but would always start performing poorly around 11am. This happened to be the peak time the application was used. A recycle would happen and the problem would go away for an hour and happen again. This process was repeated daily for a week. The application team was working with the vendor to find a solution.&lt;/p&gt;

&lt;p&gt;Our team got involved and we decided to take a look at what was going on. Since the application didn’t have any APM tools on it we went the traditional route and started monitoring performance counters. We went back in time and looked at the historical data. We could see that CPU was definitely becoming saturated. A bit deeper inspection into the .NET counters revealed that the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/x2tyfybc(v=vs.110).aspx&quot;&gt;# of Induced GC&lt;/a&gt; counter was going up at a steady rate.&lt;/p&gt;

&lt;p&gt;We compared the counters to a date just before the go-live and to no one’s surprise the issue was not there. We went back and performance tested the new application with existing scripts (we did not include the new screens) and the issue was still there. This showed there was something wrong in something else besides the proposed “only changes.”&lt;/p&gt;

&lt;p&gt;Luckily we had &lt;a href=&quot;http://www.compuware.com/en_us/application-performance-management.html&quot;&gt;dynaTrace&lt;/a&gt; at our disposal in our lower life cycle and we were able to quickly find the offending code. Analysis from the vendor showed a junior developer pulled from a previous branch that had a bug that was fixed long ago. A patch was issued that day by the vendor. We performance tested it. :)&lt;/p&gt;

&lt;h2 id=&quot;lesson&quot;&gt;Lesson&lt;/h2&gt;
&lt;p&gt;###Always Performance Test!&lt;/p&gt;

&lt;p&gt;Considering all of the time, money, and effort (yes all three) wasted on: deploying bad code, end user impact, and time to resolution. It might have been quicker, easier, and cheaper to performance test this code.&lt;/p&gt;

&lt;p&gt;If you’re ever in a situation where one of these big three come up you should always make a statement, on record, about the need to performance test. If you are silent it’s not a great place to be if someone asks why it was never done. Being in DevOps you have just as much of a responsibility and burden to ensure application performance is as high as possible.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Writing code to write code</title>
   <link href="//2014/09/06/code-to-code/"/>
   <updated>2014-09-06T00:00:00-07:00</updated>
   <id>/2014/09/06/code-to-code</id>
   <content type="html">&lt;p&gt;Every now and then a balance needs to be struck from the every day coding of an application. While personal life is usually the topic for these types of posts, today that is not the case. Sometimes you have to write code in order to write code. This is somewhat of an extended rant from my previous post.&lt;/p&gt;

&lt;p&gt;While developing the core components of my &lt;a href=&quot;http://www.github.com/chainsapm&quot;&gt;ChainsAPM&lt;/a&gt; solution I felt the need to write down thoughts and musings of what I’m trying to do as well as explain some details of the implementation. Plus, I have other things to talk about aside from that project. At the same time I need to keep myself organized; so I needed to make a separate space.&lt;/p&gt;

&lt;p&gt;Behold, the humble blog. This has always been the best sounding board for getting ideas out there. While the normal blogging scene is great, there are a lot of gotchas and really some implementation details I don’t want to mess with. Places like Wordpress and blogger have excellent packages, software and templates. I have used these places before to bring to life some idea or useful tip. But, in all of this simplicity, lay a problem I never thought about. Once I signed up, I usually never signed back in once I wrote a couple of blogs.&lt;/p&gt;

&lt;p&gt;Part of the reason for this is beacause I never really used the software as it was intended. I didn’t connect with like minded bloggers, I didn’t share the pages and I was just overall uninterested in the process. I didn’t have much control over what the pages looked like unless I wanted to get into some Wordpress implementation details that I didn’t need.&lt;/p&gt;

&lt;p&gt;GitHub provides a very minimalistic blogging infrastructure based on Jekyll (which was written at GitHub). It’s a Ruby implemented web server that uses simple templating to make static content. Once you compile the Jekyll site you can publish it anywhere and not require any databases or other silly things just to deliver content.&lt;/p&gt;

&lt;p&gt;But, going this route meant I had to learn &lt;strong&gt;YET ANOTHER&lt;/strong&gt; thing in order to get some words on the internets. It’s starting to feel like Wordpress all over again. But, this time I have a vested interest because it’s somewhat of a unified front. I’m developing my blog site in my normal IDE using familiar tools and publishing to a place that I visit every day.&lt;/p&gt;

&lt;p&gt;So instead of just sluffing off the task I decided to learn this new-to-me skill because it was also more robust and allowed me to do things that would be difficult at best and impossible overall to implement. I am now able to combine efforts and cross post to my two blogs. &lt;/p&gt;

&lt;p&gt;After plowing through a month of coding in C++ I found myself wanting something a bit prettier, something that I could craft a bit more organically and not stress about all of the implementation details. In other words, I had to write this code in order to write other code.&lt;/p&gt;
</content>
 </entry>
 

</feed>
